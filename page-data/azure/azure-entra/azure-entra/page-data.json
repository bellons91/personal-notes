{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-entra/azure-entra",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, authentication, paas\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Entra (aka Active Directory)\"), mdx(\"p\", null, \"For on-premises environments, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Active Entra runs on Windows Server\"), \" instances. It provides an identity and access management service that your organization manages.\"), mdx(\"p\", null, \"While Active Entra is the on-prem solution, Azure Active Entra is the cloud solution.\"), mdx(\"p\", null, \"When using Azure Entra, Microsoft can help protect you by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"detecting suspicious sign-in attempts\"), \" at no extra cost.\"), mdx(\"p\", null, \"Azure Entra provides several services:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Authentication\"), \": verify identity to access applications and resources. It also includes functionality such as self-service password reset, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"multifactor authentication\"), \", a custom list of banned passwords, and more.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Single sign-on\"), \": a single identity is tied to a user. As users change roles or leave an organization, having access modifications tied to that identity reduces the effort needed to change or disable accounts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Application management\"), \": you can manage your cloud and on-premises apps by using Azure Entra. Features like Application Proxy, SaaS apps, the My Apps portal, and single sign-on provide a better user experience.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Device management\"), \": Along with accounts for individual people, Azure Entra supports the registration of devices. Registration enables devices to be managed through tools like Microsoft Intune. It also allows for device-based \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/conditional-access\",\n    \"title\": \"conditional-access\"\n  }, \"[[conditional-access]]\"), \" policies\"), \" to restrict access attempts to only those coming from known devices, regardless of the requesting user account.\")), mdx(\"p\", null, \"If you have an on-prem Active Entra and want to synchronize the data with Azure Entra, you can use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Azure Entra Connect\"), \". Data is synchronized in both ways so that you can use SSO and MFA on both systems.\"), mdx(\"p\", null, \"You can use domain services with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-active-directory-domain-services\",\n    \"title\": \"azure-active-directory-domain-services\"\n  }, \"[[azure-active-directory-domain-services]]\"), \".\"), mdx(\"p\", null, \"Azure Entra can handle several types of authentication:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSO\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MFA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"passwordless authentication (eg, Windows Hello for Business)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/fido2-authentication\",\n    \"title\": \"fido2-authentication\"\n  }, \"[[fido2-authentication]]\"), \"\")), mdx(\"p\", null, \"You can finally manage users from external sources by using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-ad-external-identities\",\n    \"title\": \"azure-ad-external-identities\"\n  }, \"[[azure-ad-external-identities]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-entra-aka-active-directory","title":"Azure Entra (aka Active Directory)"}]},"outboundReferences":[{"contextLine":"- **Device management**: Along with accounts for individual people, Azure Entra supports the registration of devices. Registration enables devices to be managed through tools like Microsoft Intune. It also allows for device-based **[[conditional-access]] policies** to restrict access attempts to only those coming from known devices, regardless of the requesting user account.","targetAnchor":null,"refWord":"conditional-access","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, security\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Conditional Access\"), mdx(\"p\", null, \"Conditional Access is a tool that Azure Active Directory uses to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"allow (or deny) access to resources\"), \" based on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"identity signals\"), \". These signals include who the user is, where the user is, and what device the user is requesting access from.\"), mdx(\"p\", null, \"Conditional Access can be used to protect the organization's assets.\"), mdx(\"p\", null, \"Conditional Access also provides a more \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"granular multifactor authentication experience\"), \" for users. For example, a user might not be challenged for a second authentication factor if they're at a known location.\"), mdx(\"p\", null, \"During sign-in, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Conditional Access collects signals from the user\"), \", makes decisions based on those signals, and then enforces that decision by allowing or denying the access request or challenging for a multifactor authentication response.\"), mdx(\"p\", null, \"Only available with Azure AD Premium P1 licenses.\"), mdx(\"h2\", null, \"Signals\"), mdx(\"p\", null, \"Conditional Access uses signals to define what actions take (if any).\"), mdx(\"p\", null, \"Some signals are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User or group membership\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IP Location information: Organizations can create trusted IP address ranges that can be used when making policy decisions. Administrators can specify entire countries/regions IP ranges to block or allow traffic from.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application: Users attempting to access specific applications can trigger different Conditional Access policies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Real-time and calculated risk detection\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"e38e53db-aafa-58a0-90b8-37a9e4d20c79","fields":{"slug":"/azure/conditional-access","title":"Conditional Access"}}}},{"contextLine":"- [[fido2-authentication]]","targetAnchor":null,"refWord":"fido2-authentication","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure-certifications/az900, authentication, security\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"FIDO2 authentication\"), mdx(\"p\", null, \"The FIDO (Fast IDentity Online) Alliance helps to promote open authentication standards and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"reduce the use of passwords as a form of authentication\"), \". FIDO2 is the latest standard that incorporates the web authentication (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/WebAuthn\",\n    \"title\": \"WebAuthn\"\n  }, \"[[WebAuthn]]\"), \") standard.\"), mdx(\"p\", null, \"Fast Identity Online (FIDO) is an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"open standard for passwordless authentication\"), \".\"), mdx(\"p\", null, \"These \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FIDO2 security keys are typically USB devices\"), \" but could also use Bluetooth or NFC. With a hardware device that handles the authentication, the security of an account is increased as there's no password that could be exposed or guessed.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a1c9dfc7-6e5a-5e66-85bd-9c1d85fdccbf","fields":{"slug":"/general/fido2-authentication","title":"FIDO2 authentication"}}}}],"inboundReferences":[{"contextLine":"Part of [[azure-entra]], Azure Entra DS is a service that provides [[managed domain]] services such as:","referrer":{"parent":{"id":"d6bd220e-61a8-5325-b69a-c8c1125bcff5","fields":{"slug":"/azure/azure-entra/azure-entra-domain-services","title":"Azure Entra Domain Services"}}}}]},"fields":{"slug":"/azure/azure-entra/azure-entra","title":"Azure Entra (aka Active Directory)"}}},"pageContext":{"id":"00b2e30c-8d7d-5972-8124-4455cf61d4ed","refWordMdxSlugDict":{"conditional-access":"azure/conditional-access","fido2-authentication":"general/fido2-authentication"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}