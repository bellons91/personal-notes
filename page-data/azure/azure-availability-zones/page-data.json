{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-availability-zones",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Availability Zones\"), mdx(\"p\", null, \"Availability zones are physically separate datacenters within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region\",\n    \"title\": \"azure-region\"\n  }, \"[[azure-region]]\"), \".\"), mdx(\"p\", null, \"Each availability zone is independent, and the internal datacenters have independent power, cooling, and networking. They are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isolated\"), \" from other Availability Zones.\"), mdx(\"p\", null, \"Availability Zones are connected through a secure, high-speed network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Not all Azure Regions currently support availability zones.\"), \" When a Region supports Availability Zones, there are at least three zones within that region.\"), mdx(\"h2\", null, \"Practical usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"achieve \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"high-availability\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"co-locate computing, storage, networking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"replicate data\")), mdx(\"h2\", null, \"Azure Services that support Availability Zones\"), mdx(\"p\", null, \"Not every Azure Service supports Availability Zones (sometimes, it's not even necessary).\"), mdx(\"p\", null, \"There are 3 categories of service usage:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Zonal services\"), \": a service is pinned to a specific zone. Eg: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-virtual-machines\",\n    \"title\": \"azure-virtual-machines\"\n  }, \"[[azure-virtual-machines]]\"), \", IP Addresses;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Zone-redundant service\"), \": some services are replicated across several zones (eg: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Azure-SQL\",\n    \"title\": \"Azure SQL\"\n  }, \"[[Azure SQL]]\"), \");\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Non-regional services\"), \": some services must be available regardless of the actual location so they span across worldwide zones.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-availability-zones","title":"Azure Availability Zones","items":[{"url":"#practical-usage","title":"Practical usage"},{"url":"#azure-services-that-support-availability-zones","title":"Azure Services that support Availability Zones"}]}]},"outboundReferences":[{"contextLine":"Availability zones are physically separate datacenters within an [[azure-region]].","targetAnchor":null,"refWord":"azure-region","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Regions\"), mdx(\"p\", null, \"A region is a geographical area on the planet that contains one or more datacenters that are nearby and networked together with a low-latency network.\"), mdx(\"p\", null, \"Some features are only available in certain regions.\"), mdx(\"p\", null, \"Some other services are not bound to a specific region because they are worldwide; examples are Azure Active Directory, Azure DNS, and Azure Traffic Manager.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d0f73437-04db-515a-a0fa-f190496bc22b","fields":{"slug":"/azure/azure-region","title":"Azure Regions"}}}},{"contextLine":"1. **Zonal services**: a service is pinned to a specific zone. Eg: [[azure-virtual-machines]], IP Addresses;","targetAnchor":null,"refWord":"azure-virtual-machines","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, virtual-machines\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Virtual Machines\"), mdx(\"p\", null, \"VMs provide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/iaas\",\n    \"title\": \"iaas\"\n  }, \"[[iaas]]\"), \" in the form of a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"virtualized server\"), \". You don't have to handle physical hardware, but you still need to configure, update, and maintain the software that runs on the VM.\"), mdx(\"p\", null, \"You can create and provision a VM by selecting a preconfigured \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"VM image\"), \". An image is a template used to create a VM and may already include an OS and other software, like development tools or web hosting environments.\"), mdx(\"p\", null, \"You must choose the best \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/virtual-machines-size\",\n    \"title\": \"virtual-machines-size\"\n  }, \"[[virtual-machines-size]]\"), \" based on the expected usage. There are some ways to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/optimize-virtual-machines\",\n    \"title\": \"optimize-virtual-machines\"\n  }, \"[[optimize-virtual-machines]]\"), \".\"), mdx(\"p\", null, \"VMs are an ideal choice when you need the following:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Total control over the operating system (OS).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The ability to run custom software.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To use custom hosting configurations.\")), mdx(\"h2\", null, \"Good usages of VMs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"minor tasks\"), \" that require a single VM;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"testing and development \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"environments\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"availability\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"scalability\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"redundancy\"), \" (using VM sets);\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"running applications on the cloud in an IaaS way;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cutting costs by shutting down VMs when they are not needed;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"extending on-prem network\"), \" by adding cloud-based VMs to the existing on-prem datacenter.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"moving to the cloud (known as #lift-and-shift)\")), mdx(\"h2\", null, \"Virtual Machines Scale Sets\"), mdx(\"p\", null, \"Virtual machine scale sets let you create and manage a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"group of identical, load-balanced VMs\"), \". You can the ensure that they have been \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"configured identically\"), \" and that they have the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"same networking rules\"), \".\"), mdx(\"p\", null, \"It allows you to have some \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"monitoring\"), \" that helps determine if you need to increase or decrease the number of VMs inside that Scale Set. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You can have the number of VMs adjusted automatically based on the workload or based on a defined schedule\"), \".\"), mdx(\"h2\", null, \"Virtual Machines Availability Sets\"), mdx(\"p\", null, \"Availability sets allow you to use different power sources, network connectivity, and OS update time to avoid having too many failures in a set (if all the updates are scheduled the same day at the same hour, all the VMs will be down at the same time). Availability Sets are free (you only pay for the VM instances).\"), mdx(\"p\", null, \"Two ways to define Availability Sets:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Update domain groups\"), \": you create a group with a subset of VMs to be updated at the same time. This way, you know that all the other VMs will be up while this group is being updated. Azure will wait 30 minutes before updating another \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"update domain group\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Fault domain groups\"), \": groups that have in common the same physical infrastructure (network and/or power). By default, an availability set will split your VMs across up to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"three fault domains\"), \".\")), mdx(\"h2\", null, \"Additional resources\"), mdx(\"p\", null, \"Operate on VM using Azure CLI: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-vm-scripts\",\n    \"title\": \"azure-vm-scripts\"\n  }, \"[[azure-vm-scripts]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"1d635597-8a7f-5f35-aae3-892c6a329d5b","fields":{"slug":"/azure/azure-virtual-machines","title":"Azure Virtual Machines"}}}}],"inboundReferences":[{"contextLine":"ZRS replicates your Azure Storage data **synchronously** across **three [[azure-availability-zones]] in the primary region**.","referrer":{"parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- **zone-redundancy gateways**: only available in regions that support [[azure-availability-zones]].  Deploying gateways in Azure availability zones physically and logically separates gateways within a region while protecting your on-premises network connectivity to Azure from zone-level failures. They use Standard public IP addresses instead of Basic public IP addresses.","referrer":{"parent":{"id":"612e60bd-a63b-5e13-a982-f9ff3bb8509f","fields":{"slug":"/azure/azure-virtual-private-network","title":"Azure Virtual Private Network"}}}},{"contextLine":"There is a **physical structure**, in which every datacenter is located in an [[azure-availability-zones]], each Availability zone is located within an [[azure-region]], and Regions are coupled in [[azure-region-pairs]].","referrer":{"parent":{"id":"c6e72d47-70e2-5e4e-853d-a24c38790616","fields":{"slug":"/azure/azure-infrastructure","title":"Azure infrastructure"}}}},{"contextLine":"It may happen that an event is so big that it impacts a whole [[azure-region]]. In that case, [[azure-availability-zones]] are not enough to prevent data loss and application downtime. Therefore, we need to pair regions so that one acts as a fallback for the other.","referrer":{"parent":{"id":"14618d7a-45f9-5662-93c9-91808dd7c992","fields":{"slug":"/azure/azure-region-pairs","title":"Azure Region Pairs"}}}}]},"fields":{"slug":"/azure/azure-availability-zones","title":"Azure Availability Zones"}}},"pageContext":{"id":"cb819640-b6fa-5195-9a2e-f74bdf287afc","refWordMdxSlugDict":{"azure-region":"azure/azure-region","azure-virtual-machines":"azure/azure-virtual-machines","iaas":"general/iaas","shared-responsibility-model":"general/shared-responsibility-model","saas":"general/saas","paas":"general/paas","virtual-machines-size":"azure/virtual-machines-size","optimize-virtual-machines":"azure/optimize-virtual-machines","azure-advisor":"azure/azure-advisor","azure-vm-scripts":"azure-cli/azure-vm-scripts"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}