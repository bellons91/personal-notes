{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-storage-account/azure-table-storage",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, azure-certifications/az204, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Table Storage\"), mdx(\"p\", null, \"Azure Tables can be used to store large amounts of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"structured data\"), \".\"), mdx(\"p\", null, \"Azure tables are a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NoSQL datastore\"), \" that accepts authenticated calls from inside and outside the Azure cloud.\"), mdx(\"p\", null, \"Ideal for structured, non-relational data.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.table.core.windows.net\"), mdx(\"p\", null, \"Now these tables can be used in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db\",\n    \"title\": \"azure-cosmos-db\"\n  }, \"[[azure-cosmos-db]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-table-storage","title":"Azure Table Storage"}]},"outboundReferences":[{"contextLine":"Now these tables can be used in [[azure-cosmos-db]].","targetAnchor":null,"refWord":"azure-cosmos-db","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az204, azure-cosmos-db\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Cosmos DB\"), mdx(\"p\", null, \"Azure Cosmos DB is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fully managed NoSQL database\"), \" designed to provide low latency, elastic scalability of throughput, well-defined semantics for data consistency, and high availability.\"), mdx(\"p\", null, \"You can configure your databases to be globally distributed and available in any of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region\",\n    \"title\": \"azure-region\"\n  }, \"[[azure-region]]\"), \". To lower the latency, place the data close to where your users are.\"), mdx(\"p\", null, \"It uses \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multi-master replication protocol\"), \", meaning that all regions support both reads and writes. Multi-master replication protocol provides some functionalities:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unlimited elastic write and read scalability.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"99.999% read and write availability all around the world.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Guaranteed reads and writes served in less than 10 milliseconds at the 99th \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/percentile\",\n    \"title\": \"percentile\"\n  }, \"[[percentile]]\"), \".\")), mdx(\"p\", null, \"However, you can configure it to have only one region enabled for writing.\"), mdx(\"p\", null, \"Your application can perform near \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"real-time reads and writes against all the regions\"), \" you chose for your database. Azure Cosmos DB internally handles the data replication between regions with consistency level guarantees of the level you've selected.\"), mdx(\"p\", null, \"To use CosmoDB you have to create a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-account\",\n    \"title\": \"azure-cosmos-db-account\"\n  }, \"[[azure-cosmos-db-account]]\"), \". Every account can have one or more \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-database\",\n    \"title\": \"azure-cosmos-db-database\"\n  }, \"[[azure-cosmos-db-database]]\"), \", each containing one or more \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-container\",\n    \"title\": \"azure-cosmos-db-container\"\n  }, \"[[azure-cosmos-db-container]]\"), \". Each container then is a collection of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-item\",\n    \"title\": \"azure-cosmos-db-item\"\n  }, \"[[azure-cosmos-db-item]]\"), \".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/86d6020d7d540b88605b5dd815c6f7ea/cosmosdb-resources-hierarchy.png\",\n    \"alt\": \"CosmosDB Hierarcy\"\n  })), mdx(\"p\", null, \"For each account you can define its \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-consistency-levels\",\n    \"title\": \"azure-cosmos-db-consistency-levels\"\n  }, \"[[azure-cosmos-db-consistency-levels]]\"), \".\"), mdx(\"p\", null, \"With Azure Cosmos DB, you pay for the throughput you provision and the storage you consume on an hourly basis. Throughput must be provisioned to ensure that sufficient system resources are available for your Azure Cosmos database always. DB operations are expressed in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-cosmos-db-request-units\",\n    \"title\": \"azure-cosmos-db-request-units\"\n  }, \"[[azure-cosmos-db-request-units]]\"), \".\"), mdx(\"p\", null, \"Azure Cosmos DB encryption protects your data at rest by seamlessly encrypting your data as it's written in our datacenters, and automatically decrypting it for you as you access it.\"), mdx(\"h2\", null, \"Stored procedures, Triggers, User-defined functions\"), mdx(\"p\", null, \"With Azure Cosmos DB you can use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stored Procedures, Triggers, and User-Defined Functions\"), \". To call a stored procedure, trigger, or user-defined function, you need to register it. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stored procedures are registered per collection\"), \", and can operate on any document or an attachment present in that collection.\"), mdx(\"h3\", null, \"Stored procedures\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stored procedures are written using JavaScript\"), \". They can create, update, read, query, and delete items within an Azure Cosmos DB container.\"), mdx(\"p\", null, \"For partitioned containers, when you run a stored procedure, you must provide a partition key value in the request options. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Stored procedures are always scoped to a partition key\"), \". Items that have a different partition key value aren't visible to the stored procedure.\"), mdx(\"h2\", null, \"Backup\"), mdx(\"p\", null, \"You can define backup policies for your data.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Periodic\"), \": backup is taked at periodic intervals, based on configuration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Continuous\"), \": provides a backup window of 7 or 30 days. You can restore data available at any moment in that specific time window.\")), mdx(\"p\", null, \"Backup can be stored redundantly, using either Local-redundant storage or Geo-redundant storage.\"), mdx(\"h2\", null, \"Available APIs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"NoSQL\"), \": data is stored in document format. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"It's the default API\"), \". It supports querying using SQL syntax.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"MongoDB\"), \": data is stored in documents using BSON format.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PostgreSQL\"), \": allows for distributed tables. Data is stored either on a single node or in a multi-node configuration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/apache-cassandra\",\n    \"title\": \"apache-cassandra\"\n  }, \"[[apache-cassandra]]\"), \"\"), \": data is stored in a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"column-oriented schema\"), \". Good for large volumes of data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Apache Gremlin\"), \": creates graphs where data is stored as edges and vertices.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Table\"), \": it stores data in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"key/value format\"), \". If you're currently using Azure Table storage, you may see some limitations in latency, scaling, throughput, global distribution, index management, low query performance. API for Table overcomes these limitations and it's recommended to migrate your app if you want to use the benefits of Azure Cosmos DB. API for Table only supports \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/OLTP\",\n    \"title\": \"OLTP\"\n  }, \"[[OLTP]]\"), \" scenarios.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d175696a-d7db-598b-a54a-460b2f402b9b","fields":{"slug":"/azure/azure-cosmos-db/azure-cosmos-db","title":"Azure Cosmos DB"}}}}],"inboundReferences":[{"contextLine":"- [[azure-table-storage]]","referrer":{"parent":{"id":"4a4b1518-8dd5-5723-aa5e-dc426ee27622","fields":{"slug":"/azure/azure-storage-account/azure-storage-account","title":"Azure Storage Account"}}}},{"contextLine":"- [[azure-table-storage]]","referrer":{"parent":{"id":"4a4b1518-8dd5-5723-aa5e-dc426ee27622","fields":{"slug":"/azure/azure-storage-account/azure-storage-account","title":"Azure Storage Account"}}}},{"contextLine":"    - [[azure-table-storage]]","referrer":{"parent":{"id":"c34fa374-8cf9-5420-b22a-1dcb7706b8ea","fields":{"slug":"/azure-certifications/az-900","title":"AZ-900 - Azure Fundamentals"}}}}]},"fields":{"slug":"/azure/azure-storage-account/azure-table-storage","title":"Azure Table Storage"}}},"pageContext":{"id":"8189119f-689a-560b-b6d0-105166ea6f73","refWordMdxSlugDict":{"azure-cosmos-db":"azure/azure-cosmos-db/azure-cosmos-db","azure-region":"azure/azure-region","azure-cosmos-db-account":"azure/azure-cosmos-db/azure-cosmos-db-account","azure-cosmos-db-consistency-levels":"azure/azure-cosmos-db/azure-cosmos-db-consistency-levels","azure-cosmos-db-database":"azure/azure-cosmos-db/azure-cosmos-db-database","azure-cosmos-db-container":"azure/azure-cosmos-db/azure-cosmos-db-container","azure-cosmos-db-item":"azure/azure-cosmos-db/azure-cosmos-db-item","azure-cosmos-db-request-units":"azure/azure-cosmos-db/azure-cosmos-db-request-units","apache-cassandra":"general/apache-cassandra"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}