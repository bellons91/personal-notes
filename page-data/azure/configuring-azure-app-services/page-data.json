{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/configuring-azure-app-services",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az204\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Configuring Azure App Services\"), mdx(\"h2\", null, \"Application settings\"), mdx(\"p\", null, \"In Azure App Services, configurations are stored as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"environment variables\"), \".\"), mdx(\"p\", null, \"App settings are always encrypted when stored (\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"encrypted-at-rest\"), \").\"), mdx(\"p\", null, \"If you are using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-services-deployment-slots\",\n    \"title\": \"azure-app-services-deployment-slots\"\n  }, \"[[azure-app-services-deployment-slots]]\"), \", you can mark a setting as \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"swappable\"), \".\"), mdx(\"p\", null, \"Note: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"the key format changes for Linux-based containers\"), \". Instead of using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Key:SubKey\"), \" you have to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Key__SubKey\"), \".\"), mdx(\"h2\", null, \"General settings\"), mdx(\"p\", null, \"There are some settings that define the underlying infrastructure of the App Service.\"), mdx(\"p\", null, \"Depending on the values, the application might require to scale up to a higher pricint tier.\"), mdx(\"p\", null, \"Examples are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Stack settings\"), \": language and SDK version;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Platform settings\"), \": used to configure the hosting platform.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Bitness\"), \": 32- or 64-bit;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"WebSocket protocol\"), \": useful for SignalR;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/always-on\",\n    \"title\": \"always-on\"\n  }, \"[[always-on]]\"), \"\"), \": disabled by default;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Managed pipeline version\"), \": The IIS pipeline mode. Set it to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Classic\"), \" if you have a legacy app that requires an older version of IIS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"HTTP version\"), \": Set to 2.0 to enable support for HTTPS/2 protocol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"general/arr-affinity\",\n    \"title\": \"general/arr-affinity\"\n  }, \"[[general/arr-affinity]]\"), \"\"), \":  In a multi-instance deployment, ensure that the client is routed to the same instance for the life of the session. You can set this option to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Off\"), \" for stateless applications.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Debugging\"), \": Enable remote debugging for ASP.NET, ASP.NET Core, or Node.js apps. This option turns off automatically after 48 hours.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Incoming client certificates\"), \": require client certificates in mutual authentication. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tls\",\n    \"title\": \"tls\"\n  }, \"[[tls]]\"), \" mutual authentication is used to restrict access to your app by enabling different types of authentication for it.\")), mdx(\"h2\", null, \"Path mappings\"), mdx(\"p\", null, \"You can configure \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"handler mappings,\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"virtual application\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"directory mappings\"), \".\"), mdx(\"p\", null, \"The Path mappings page displays different options based on the OS type.\"), mdx(\"h3\", null, \"Windows apps\"), mdx(\"p\", null, \"For Windows apps, you can customize the IIS handler mappings and virtual applications and directories.\"), mdx(\"p\", null, \"Handler mappings let you add custom script processors to handle requests for specific file extensions.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Each app has the default root path (/) mapped to \", mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"D:\\\\home\\\\site\\\\wwwroot\")), \", where your code is deployed by default. If your app root is in a different folder, or if your repository has more than one application, you can edit or add virtual applications and directories.\"), mdx(\"p\", null, \"You can configure virtual applications and directories by specifying each virtual directory and its corresponding physical path relative to the website root (D:\\\\home). To mark a virtual directory as a web application, clear the Directory check box.\"), mdx(\"h3\", null, \"Linux app + containeraized apps\"), mdx(\"p\", null, \"Containerized apps include \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"all Linux apps and also the Windows and Linux custom containers\"), \" running on App Service.\"), mdx(\"p\", null, \"You can use a storage account as a storage mount. The mount can be a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-files\",\n    \"title\": \"azure-files\"\n  }, \"[[azure-files]]\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"), mdx(\"h2\", null, \"Diagnostic logging\"), mdx(\"p\", null, \"There are some built-in deiagnostics associated with App Services.\"), mdx(\"h3\", null, \"Application logging\"), mdx(\"p\", null, \"Logs messages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"generated by your application code\"), \". The messages are generated by the web framework you choose, or from your application code directly using the standard logging pattern of your language.\"), mdx(\"p\", null, \"Each message is assigned one of the following categories: Critical, Error, Warning, Info, Debug, and Trace.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Available for Windows and Linux\"), \" platform.\"), mdx(\"p\", null, \"Logs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stored in the App Service file system and/or Azure Storage blobs\"), \".\"), mdx(\"p\", null, \"For Windows: the Filesystem option is for temporary debugging purposes, and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"turns itself off in 12 hours\"), \". The Blob option is for long-term logging, and needs a blob storage container to write logs to.\"), mdx(\"p\", null, \"For Linux: you can specify the Quota (MB) the application logs. You can also specify the Retention Period, set the number of days the logs should be retained.\"), mdx(\"h3\", null, \"Web server logging\"), mdx(\"p\", null, \"Raw HTTP request data in the W3C extended log file format.\"), mdx(\"p\", null, \"Each log message includes data like the HTTP method, resource URI, client IP, client port, user agent, response code, and so on.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Available only for Windows\"), \" platform.\"), mdx(\"p\", null, \"Logs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stored in the App Service file system or Azure Storage blobs\"), \".\"), mdx(\"h3\", null, \"Detailed error logging\"), mdx(\"p\", null, \"Copies of the .html error pages that would have been sent to the client browser. For security reasons, detailed error pages shouldn't be sent to clients in production, but App Service can save the error page each time an application error occurs that has HTTP code 400 or greater.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Available only for Windows\"), \" platform.\"), mdx(\"p\", null, \"Logs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stored in the App Service file system\"), \".\"), mdx(\"h3\", null, \"Failed request tracing\"), mdx(\"p\", null, \"Detailed tracing information on failed requests, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"including a trace of the IIS components\"), \" used to process the request and the time taken in each component. One folder is generated for each failed request, which contains the XML log file, and the XSL stylesheet to view the log file with.\"), mdx(\"h3\", null, \"Deployment logging\"), mdx(\"p\", null, \"Helps determine why a deployment failed. Deployment logging happens automatically and there are no configurable settings for deployment logging.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Available for Windows and Linux\"), \" platform.\"), mdx(\"p\", null, \"Logs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stored in the App Service file system\"), \".\"), mdx(\"h3\", null, \"Where to find these logs\"), mdx(\"p\", null, \"If you configure the Azure Storage blobs option for a log type, you need a client tool that works with Azure Storage.\"), mdx(\"p\", null, \"For logs stored in the App Service file system, the easiest way is to download the ZIP file in the browser at:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linux/container apps: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"https://<app-name>.scm.azurewebsites.net/api/logs/docker/zip\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Windows apps: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"https://<app-name>.scm.azurewebsites.net/api/dump\"))), mdx(\"p\", null, \"For Linux/container apps, the ZIP file contains console output logs for both the docker host and the docker container.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"For a scaled-out app\"), \", the ZIP file contains one set of logs for each instance.\"), mdx(\"p\", null, \"In the App Service file system, these log files are the contents of the /home/LogFiles directory.\"), mdx(\"h2\", null, \"Configuring certificates\"), mdx(\"p\", null, \"Azure App Service has tools that let you create, upload, or import a private certificate or a public \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/certificate\",\n    \"title\": \"certificate\"\n  }, \"[[certificate]]\"), \" into App Service.\"), mdx(\"p\", null, \"A certificate uploaded into an app is stored in a deployment unit that is bound to the app service plan's resource group and region combination (internally called a webspace). This makes the certificate accessible to other apps in the same resource group and region combination.\"), mdx(\"p\", null, \"You can either:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Create a free App Service managed certificate\"), \": you need a Basic, Standard, Premium or Isolated tier; it's a TLS/SSL server certificate that's fully managed by App Service and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"renewed continuously and automatically in six-month increments\"), \", 45 days before expiration. You create the certificate and bind it to a custom domain, and let App Service do the rest.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Purchase an App Service certificate;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Import a certificate from Key Vault\"), \": the certificate is then stored in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-key-vault\",\n    \"title\": \"azure-key-vault\"\n  }, \"[[azure-key-vault]]\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upload a private certificate (it must be stored in a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/pfx-file\",\n    \"title\": \"pfx-file\"\n  }, \"[[pfx-file]]\"), \" and encrypted with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/triple-des\",\n    \"title\": \"triple-des\"\n  }, \"[[triple-des]]\"), \")\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#configuring-azure-app-services","title":"Configuring Azure App Services","items":[{"url":"#application-settings","title":"Application settings"},{"url":"#general-settings","title":"General settings"},{"url":"#path-mappings","title":"Path mappings","items":[{"url":"#windows-apps","title":"Windows apps"},{"url":"#linux-app--containeraized-apps","title":"Linux app + containeraized apps"}]},{"url":"#diagnostic-logging","title":"Diagnostic logging","items":[{"url":"#application-logging","title":"Application logging"},{"url":"#web-server-logging","title":"Web server logging"},{"url":"#detailed-error-logging","title":"Detailed error logging"},{"url":"#failed-request-tracing","title":"Failed request tracing"},{"url":"#deployment-logging","title":"Deployment logging"},{"url":"#where-to-find-these-logs","title":"Where to find these logs"}]},{"url":"#configuring-certificates","title":"Configuring certificates"}]}]},"outboundReferences":[{"contextLine":"If you are using [[azure-app-services-deployment-slots]], you can mark a setting as *swappable*.","targetAnchor":null,"refWord":"azure-app-services-deployment-slots","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az204, azure-app-service\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure App Services Deployment Slots\"), mdx(\"p\", null, \"When you deploy your web app, you can use a separate deployment slot instead of the default production slot when you're running in the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Standard App Service Plan tier or better\"), \".\"), mdx(\"p\", null, \"Deployment slots are live apps \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"with their own host names\"), \".\"), mdx(\"p\", null, \"App content and configuration elements can be swapped between two deployment slots, including the production slot.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"dc191f59-574c-5fa8-a607-09e56c862160","fields":{"slug":"/azure/azure-app-services-deployment-slots","title":"Azure App Services Deployment Slots"}}}},{"contextLine":"  * **[[always-on]]**: disabled by default;","targetAnchor":null,"refWord":"always-on","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\",\n  \"foam_template\": {\n    \"filepath\": \"./azure/always-on.md\"\n  },\n  \"tags\": \"azure, cloud, azure-certifications/az204\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Always On\"), mdx(\"p\", null, \"A flag available on Azure App Sevices that unloads the application after 20 minutes of no incoming requests.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a02c6c80-bf7d-52ea-973f-22b44bc5943b","fields":{"slug":"/azure/always-on","title":"Always On"}}}},{"contextLine":"  * **[[general/arr-affinity]]**:  In a multi-instance deployment, ensure that the client is routed to the same instance for the life of the session. You can set this option to *Off* for stateless applications.","targetAnchor":null,"refWord":"general/arr-affinity","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\",\n  \"foam_template\": {\n    \"filepath\": \"./general/arr-affinity.md\"\n  },\n  \"tags\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ARR Affinity\"), mdx(\"p\", null, \"Application Request Routing (ARR) for IIS 7 and above is a proxy-based routing module that forwards HTTP requests to application servers based on HTTP headers, server variables, and load balance algorithms.\"), mdx(\"p\", null, \"ARR cleverly identifies the user by assigning them a special cookie (known as an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"affinity cookie\"), \"), which allows the service to choose the right instance the user was using to serve subsequent requests made by that user. This means, a client establishes a session with an instance and it will keep talking to the same instance until his session has expired.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://techcommunity.microsoft.com/t5/apps-on-azure-blog/configure-arraffinity-cookie-when-accessing-azure-app-service/ba-p/3842511\"\n  }, \"Configure ARRAffinity cookie when accessing Azure App Service behind Azure Application Gateway\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://azure.github.io/AppService/2016/05/16/Disable-Session-affinity-cookie-(ARR-cookie)-for-Azure-web-apps.html\"\n  }, \"Disable Session affinity cookie (ARR cookie) for Azure web apps\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://learn.microsoft.com/en-us/iis/extensions/planning-for-arr/application-request-routing-version-2-overview\"\n  }, \"Application Request Routing Version 2 Overview\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"4037db92-e1b8-5d80-be20-9c1752603c85","fields":{"slug":"/general/arr-affinity","title":"ARR Affinity"}}}},{"contextLine":"* **Incoming client certificates**: require client certificates in mutual authentication. [[tls]] mutual authentication is used to restrict access to your app by enabling different types of authentication for it.","targetAnchor":null,"refWord":"tls","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"networking\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"TLS\"), mdx(\"p\", null, \"TLS stands for Transport Layer Security, a protocol that provides secure communication over the internet. TLS encrypts the data that is sent and received between a client and a server, preventing eavesdropping, tampering, and impersonation. TLS also ensures that the client and the server can verify each other's identity using digital certificates. TLS is widely used for web browsing, email, instant messaging, voice over IP, and other applications that require privacy and authentication.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"53f0a31d-d426-5535-8357-3d6b48bd4fa2","fields":{"slug":"/general/tls","title":"TLS"}}}},{"contextLine":"You can use a storage account as a storage mount. The mount can be a [[azure-files]] or [[azure-blob-storage]].","targetAnchor":null,"refWord":"azure-files","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Files\"), mdx(\"p\", null, \"It's a fully managed solution to share files in the cloud using standard protocols, such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/smb-protocol\",\n    \"title\": \"smb-protocol\"\n  }, \"[[smb-protocol]]\"), \" (accessible from Windows, Linux, and macOS clients) or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Network-File-System-(NFS)\",\n    \"title\": \"Network File System (NFS)\"\n  }, \"[[Network File System (NFS)]]\"), \" (accessible from Linux and macOS clients).\"), mdx(\"p\", null, \"Given that SMB and NFS are industry standards, you can replace your current file share with the one hosted on Azure.\"), mdx(\"p\", null, \"You can create file shares using Azure CLI and PowerShell commands.\"), mdx(\"p\", null, \"Files can be accessed using Azure Portal or Azure Storage Explorer.\"), mdx(\"p\", null, \"Azure files support high availability.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.file.core.windows.net\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"983689f8-8aa7-5d95-b748-0c31758b8177","fields":{"slug":"/azure/azure-files","title":"Azure Files"}}}},{"contextLine":"You can use a storage account as a storage mount. The mount can be a [[azure-files]] or [[azure-blob-storage]].","targetAnchor":null,"refWord":"azure-blob-storage","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900 storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Blob Storage\"), mdx(\"p\", null, \"Azure Blob Storage is a generic storage solution. You can store \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text and binary data\"), \" in an unstructured format.\"), mdx(\"p\", null, \"Blob storage can manage thousands of simultaneous uploads.\"), mdx(\"p\", null, \"Blob storage is ideal for:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serving images or documents directly to a browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing files for distributed access.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Streaming video and audio.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for backup and restore, disaster recovery, and archiving.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for analysis by an on-premises or Azure-hosted service.\")), mdx(\"p\", null, \"Objects can be accessed via HTTP or HTTPS, given that every object can be referenced using a specific URL.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.blob.core.windows.net\"), mdx(\"h2\", null, \"Blob Storage tiers\"), mdx(\"p\", null, \"To manage costs better you have to pick the right storage tier, depending on the expected usage.\"), mdx(\"h3\", null, \"Hot tier\"), mdx(\"p\", null, \"In the Hot tier, you keep your resources always available: it's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"good for data that is accessed often\"), \" because it allows you to access it quickly.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Costs are high for the storage\"), \" because you need to store the data in an optimized way, but \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"low for data access\"), \" because the data retrieval is optimized for reads.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\")), mdx(\"h3\", null, \"Cool tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"Costs are low for storage but high for data access.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 30 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Cold tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 90 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Archive tier\"), mdx(\"p\", null, \"This tier is for archiving data, so its costs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very high for data access\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very low for data storage\"), \".\"), mdx(\"p\", null, \"It's good for data that does not change for at least 180 days.\"), mdx(\"p\", null, \"Data is stored offline to reduce costs, but you will have higher costs to rehydrate and access data.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa2b859e-4c39-5b66-ab4f-e3f271b09384","fields":{"slug":"/azure/azure-blob-storage","title":"Azure Blob Storage"}}}},{"contextLine":"Azure App Service has tools that let you create, upload, or import a private certificate or a public [[certificate]] into App Service.","targetAnchor":null,"refWord":"certificate","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"certificate\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Certificate\"), mdx(\"p\", null, \"A certificate is a digital document that contains information about the identity and validity of a website or a server.\"), mdx(\"p\", null, \"It has a public key and a private key. This info is stored in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/pfx-file\",\n    \"title\": \"pfx-file\"\n  }, \"[[pfx-file]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"52a8cdd0-8dbc-5f9a-bf53-9038187e7539","fields":{"slug":"/general/certificate","title":"Certificate"}}}},{"contextLine":"* Upload a private certificate (it must be stored in a [[pfx-file]] and encrypted with [[triple-des]])","targetAnchor":null,"refWord":"pfx-file","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"certificate\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"PFX file\"), mdx(\"p\", null, \"A PFX file is a type of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/certificate\",\n    \"title\": \"certificate\"\n  }, \"[[certificate]]\"), \" file that contains both the public and private keys of a digital signature.\"), mdx(\"p\", null, \"It is used to verify the identity of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/certificate-holder\",\n    \"title\": \"certificate holder\"\n  }, \"[[certificate holder]]\"), \" and to create secure connections with web servers, email servers, or other applications.\"), mdx(\"p\", null, \"A PFX file can be generated from other certificate formats, such as .pvk, .spc, or .cer, using tools like Pvk2Pfx or Advanced Installer . A PFX file is password protected and can be imported or exported to different devices or platforms.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"bd1228f3-9937-5116-8a78-dc6df0fe18b2","fields":{"slug":"/general/pfx-file","title":"PFX file"}}}},{"contextLine":"* Upload a private certificate (it must be stored in a [[pfx-file]] and encrypted with [[triple-des]])","targetAnchor":null,"refWord":"triple-des","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"certificate, security, encryption\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Triple-DES\"), mdx(\"p\", null, \"Triple-des is a symmetric-key encryption algorithm that uses three 56-bit keys to encrypt and decrypt data.\"), mdx(\"p\", null, \"It is a variant of the Data Encryption Standard (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/DES\",\n    \"title\": \"DES\"\n  }, \"[[DES]]\"), \") that was developed in the 1970s. Triple-des applies DES three times to each data block, making it more secure than single DES, but also slower.\"), mdx(\"p\", null, \"Triple-des is widely used in banking, e-commerce, and other applications that require high-level security.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"3474c33b-250a-55d1-9635-7430d0a94685","fields":{"slug":"/general/triple-des","title":"Triple-DES"}}}}],"inboundReferences":[{"contextLine":"  - [[configuring-azure-app-services]]","referrer":{"parent":{"id":"054932f3-ea86-5292-9b43-2c04a7a196ec","fields":{"slug":"/azure-certifications/az-204","title":"AZ-204 - Developing Solutions for Microsoft Azure"}}}}]},"fields":{"slug":"/azure/configuring-azure-app-services","title":"Configuring Azure App Services"}}},"pageContext":{"id":"eea6c836-aa5a-5558-9b7c-e52095295b90","refWordMdxSlugDict":{"azure-app-services-deployment-slots":"azure/azure-app-services-deployment-slots","always-on":"azure/always-on","general/arr-affinity":"general/arr-affinity","tls":"general/tls","azure-files":"azure/azure-files","smb-protocol":"general/smb-protocol","azure-blob-storage":"azure/azure-blob-storage","certificate":"general/certificate","pfx-file":"general/pfx-file","triple-des":"general/triple-des"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}