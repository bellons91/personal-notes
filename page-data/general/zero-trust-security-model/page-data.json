{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/general/zero-trust-security-model",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"security, authentication\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Zero Trust security model\"), mdx(\"p\", null, \"Zero Trust is a security model that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"assumes the worst-case scenario\"), \" and protects resources with that expectation. Zero Trust assumes breach at the outset and then verifies each request as though it originated from an uncontrolled network.\"), mdx(\"p\", null, \"Three principles:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Verify explicitly\"), \": Always authenticate and authorize based on all available data points.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Follow \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/principle-of-least-privilege\",\n    \"title\": \"principle-of-least-privilege\"\n  }, \"[[principle-of-least-privilege]]\"), \"\"), \": Limit user access with Just-In-Time and Just-Enough-Access (JIT/JEA), risk-based adaptive policies, and data protection.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Assume breach\"), \": Minimize blast radius and segment access. Verify end-to-end encryption. Use analytics to get visibility, drive threat detection, and improve defences.\")), mdx(\"p\", null, \"While on older approaches, a device was considered secure when it was connected to a corporate network, the Zero Trust security model grants access to a user based on authenticated requests rather than the connection type.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#zero-trust-security-model","title":"Zero Trust security model"}]},"outboundReferences":[{"contextLine":"- **Follow [[principle-of-least-privilege]]**: Limit user access with Just-In-Time and Just-Enough-Access (JIT/JEA), risk-based adaptive policies, and data protection.","targetAnchor":null,"refWord":"principle-of-least-privilege","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"security\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Principle of Least Privilege\"), mdx(\"p\", null, \"The principle of least privilege says that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"you should only grant access up to the level needed to complete a task\"), \".\"), mdx(\"p\", null, \"Suppose you only need read access to a resource. In that case, you should only be granted access to that specific resource and only for read operations.\"), mdx(\"p\", null, \"In Azure, this can be achieved using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-rbac\",\n    \"title\": \"azure-rbac\"\n  }, \"[[azure-rbac]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"b7cc96c6-6ae1-53e6-bebd-5eda506898e4","fields":{"slug":"/general/principle-of-least-privilege","title":"Principle of Least Privilege"}}}}],"inboundReferences":[]},"fields":{"slug":"/general/zero-trust-security-model","title":"Zero Trust security model"}}},"pageContext":{"id":"c7296e7b-ed3f-5a6f-9ee7-66951124b5f3","refWordMdxSlugDict":{"principle-of-least-privilege":"general/principle-of-least-privilege","azure-rbac":"azure/azure-rbac"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}