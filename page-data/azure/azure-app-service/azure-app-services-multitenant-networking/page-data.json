{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-app-service/azure-app-services-multitenant-networking",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az204,\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Multitenant App Service networking\"), mdx(\"p\", null, \"The roles that handle incoming HTTP or HTTPS requests are called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"front ends\"), \".\"), mdx(\"p\", null, \"The roles that host the customer workload are called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"workers\"), \". If you scale out the worker, all the apps in that App Service plan are replicated on a new worker for each instance in your App Service plan.\"), mdx(\"p\", null, \"All the roles in an App Service deployment exist in a multi-tenant network. Because there are many different customers in the same App Service scale unit, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"you can't connect the App Service network directly to your network\"), \".\"), mdx(\"p\", null, \"Since you cannot connect directly to the App Service, you have to use the functionalities provided by Azure to handle inbound and outbound connections.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Inbound\"), \" features:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"App-assigned address:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Support IP-based SSL needs for your app\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Support unshared dedicated inbound address for your app\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Access restrictions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Restrict access to your app from a set of well-defined addresses\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Service endpoints\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Private endpoints\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Outbound\"), \" features:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hybrid connections\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gateway-required virtual network integration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-virtual-network\",\n    \"title\": \"azure-virtual-network\"\n  }, \"[[azure-virtual-network]]\"), \"\")), mdx(\"h2\", null, \"Outbound addresses\"), mdx(\"p\", null, \"Depending on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-service-plan\",\n    \"title\": \"azure-app-service-plan\"\n  }, \"[[azure-app-service-plan]]\"), \", you use a different set of worker VMs, each with a different set of outbound addresses.\"), mdx(\"p\", null, \"There are three groups:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Free, Shared, Basic, Standard, Premium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PremiumV2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PremiumV3\")), mdx(\"p\", null, \"The outbound addresses used by your app for making outbound calls are listed in the properties for your app. These addresses are shared by all the apps running on the same worker VM family in the App Service deployment\"), mdx(\"p\", null, \"You can see the list of outbound addresses available for your Scale unit by accessing a property named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"possibleOutboundIpAddresses\"), \".\"), mdx(\"p\", null, \"Using the CLI, you can see:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the list of outbound addresses available for your app\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the list of all possible outbound addresses for your app, regardless of the pricing tier.\")), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-service-scripts\",\n    \"title\": \"azure-app-service-scripts#List available outbound addresses\"\n  }, \"[[azure-app-service-scripts#List available outbound addresses]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#multitenant-app-service-networking","title":"Multitenant App Service networking","items":[{"url":"#outbound-addresses","title":"Outbound addresses"}]}]},"outboundReferences":[{"contextLine":"- [[azure-virtual-network]]","targetAnchor":null,"refWord":"azure-virtual-network","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, networking, iaas\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Virtual Network\"), mdx(\"p\", null, \"It's a virtual network that allows services within Azure to communicate.\"), mdx(\"p\", null, \"You can also add on-prem endpoints and add them to the Virtual Network.\"), mdx(\"p\", null, \"You can create both private and public endpoints:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"public endpoints\"), \": these endpoints have a public IP that can be accessed from everywhere;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"private endpoints\"), \": these endpoints have an IP that can be accessed only within the same network.\")), mdx(\"h2\", null, \"Isolation and Segmentation\"), mdx(\"p\", null, \"You can create multiple isolated networks, defining a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"private IP address space\"), \".\"), mdx(\"p\", null, \"The IP range only exists within the virtual network and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isn't internet routable\"), \". You can divide that IP address space into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"subnets\"), \" and allocate part of the defined address space to each named subnet.\"), mdx(\"p\", null, \"You can resolve the names using the built-in name resolution service.\"), mdx(\"h2\", null, \"Internet communications\"), mdx(\"p\", null, \"Each service within the Azure Virtual Network can have a set of public IPs so that they can be accessed by external clients.\"), mdx(\"p\", null, \"You can configure a load balancer to handle resources usage.\"), mdx(\"h2\", null, \"Communication between Azure resources\"), mdx(\"p\", null, \"You can have Azure Resources communicate in two ways:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Virtual networks\"), \": several Azure resources can communicate using the same network, and share the same traffic.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Service endpoints\"), \": specific endpoints to communicate with an Azure resource, like Azure SQL databases.\")), mdx(\"h2\", null, \"Communicate with on-premises resources\"), mdx(\"p\", null, \"You can link on-prem resources using an Azure subscription, so that the network includes both services hosted on Azure and services hosted on a local environment.\"), mdx(\"p\", null, \"You can achieve this kind of connectivity using:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Point-to-site VPN\"), \" connections: using a VPN, you can access an Azure Resources from a computer outside that network;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Site-to-site VPN\"), \": link your local VPN with an Azure VPN, to make it appear to be a single, local, network;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-expressroute\",\n    \"title\": \"azure-expressroute\"\n  }, \"[[azure-expressroute]]\"), \"\"), \": it's a dedicated connectivity to Azure that does not travel over the internet. Useful when you need greater bandwidth and higher levels of security.\")), mdx(\"h2\", null, \"Route network traffic\"), mdx(\"p\", null, \"By default, Azure routes traffic between subnets on any connected virtual networks, on-premises networks, and the internet.\"), mdx(\"p\", null, \"You also can control routing and override those settings, as follows:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/Route-tables\",\n    \"title\": \"Route tables\"\n  }, \"[[Route tables]]\"), \"\"), \" allow you to define rules about how traffic should be directed. You can create custom route tables that control \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"how packets are routed between subnets\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/Border-Gateway-Protocol-(BGP)\",\n    \"title\": \"Border Gateway Protocol (BGP)\"\n  }, \"[[Border Gateway Protocol (BGP)]]\"), \"\"), \" works with Azure VPN gateways, Azure Route Server, or Azure ExpressRoute to propagate on-premises BGP routes to Azure virtual networks\")), mdx(\"h2\", null, \"Filter network traffic\"), mdx(\"p\", null, \"Azure virtual networks enable you to filter traffic between subnets by using the following approaches:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Network security groups\"), \" are Azure resources that can contain \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"multiple inbound and outbound security rules\"), \". You can define these rules to allow or block traffic, based on factors such as source and destination IP address, port, and protocol.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Network virtual appliances\"), \" are \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"specialized VMs\"), \" that can be compared to a hardened network appliance. A network virtual appliance carries out a particular network function, such as running a firewall or performing wide area network (WAN) optimization.\")), mdx(\"h2\", null, \"Network Peering\"), mdx(\"p\", null, \"You can link virtual networks together by using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"virtual network peering\"), \".\"), mdx(\"p\", null, \"Network traffic between peered networks is private, and travels on the Microsoft backbone network, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"never entering the public internet\"), \".\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/User-defined-routes-(UDR)\",\n    \"title\": \"User-defined routes (UDR)\"\n  }, \"[[User-defined routes (UDR)]]\"), \" allow you to control the routing tables between subnets within a virtual network or between virtual networks. This allows for greater control over network traffic flow.\"), mdx(\"h2\", null, \"Additional resources\"), mdx(\"p\", null, \"You can use the Azure Shell to operate on a Virtual Network: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-network-scripts\",\n    \"title\": \"azure-network-scripts\"\n  }, \"[[azure-network-scripts]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d43db6af-b363-5f6d-843c-d7d238a279fb","fields":{"slug":"/azure/azure-virtual-network","title":"Azure Virtual Network"}}}},{"contextLine":"Depending on the [[azure-app-service-plan]], you use a different set of worker VMs, each with a different set of outbound addresses.","targetAnchor":null,"refWord":"azure-app-service-plan","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\",\n  \"foam_template\": {\n    \"filepath\": \"./azure/azure-app-service-plan.md\"\n  },\n  \"tags\": \"azure, cloud, azure-certifications/az204\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure App Service Plan\"), mdx(\"p\", null, \"An \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-service\",\n    \"title\": \"azure-app-service\"\n  }, \"[[azure-app-service]]\"), \" always runs in an App Service plan, which defines the set of compute resources available to the app.\"), mdx(\"p\", null, \"One or more apps can be configured to run in the same App Service Plan.\"), mdx(\"p\", null, \"Each App Service plan defines:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating System (Windows, Linux)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Region (West US, East US, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Number of VM instances\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Size of VM instances (Small, Medium, Large)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pricing tier (Free, Shared, Basic, Standard, Premium, PremiumV2, PremiumV3, Isolated, IsolatedV2)\")), mdx(\"p\", null, \"App Service Plans can be reused and configured as independent entities.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/4dd97e0e00d6a280d2408cde832520a2/app-service-plans.png\",\n    \"alt\": \"App Service Plans list\"\n  })), mdx(\"p\", null, \"If you publish some applications under the same App Service Plan, when you need to scale the application the same changes are applied to all the other applications within the same App Service Plan. To scale only a single application, you have to move it to a standalone App Service Plan.\"), mdx(\"p\", null, \"You can \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"potentially\"), \" save money by putting multiple apps into one App Service plan. However, since apps in the same App Service plan all share the same compute resources you need to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"understand the capacity of the existing App Service plan\"), \" and the expected load for the new app.\"), mdx(\"h2\", null, \"Pricing tiers\"), mdx(\"h3\", null, \"Shared compute\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Free\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Shared\"), \" pricing tiers;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the app runs on the same Azure VM as other App Service apps (these apps can belong to other customers)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CPU and computation resources are shared with all the other apps hosted in th same VM;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"resources \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"cannot scale out\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they have a fixed allocated amount of CPU time;\")), mdx(\"h3\", null, \"Dedicated compute\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Basic\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Standard\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Premium\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PremiumV2\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PremiumV3\"), \" tiers;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"only apps in the same App Service plan share the same compute resources;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"can scale out\"), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if multiple apps are in the same App Service plan, they all share the same VM instances.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if you have multiple deployment slots for an app, all deployment slots also run on the same VM instances.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if you enable diagnostic logs, perform backups, or run WebJobs, they also use CPU cycles and memory on these VM instances.\")), mdx(\"h3\", null, \"Isolated\"), mdx(\"p\", null, \"Similar to Dedicated compute, but with even more isolation.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Isolated\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"IsolatedV2\"), \" tiers;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"resources are stored in dedicated VMs and Azure Virtual Networks;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maximum level of isolation;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maximum scale-out capabilities;\")), mdx(\"h2\", null, \"How to deploy\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CI/CD\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Azure DevOps Services\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GitHub\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BitBucket\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manual\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Git URL as remote repository\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"az webapp up\"), \", which can also create a new App Service\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zip deployment, using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"curl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FTP/FTPS\")))), mdx(\"h2\", null, \"Deployment slots\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Standard\"), \" App Service Plan tier or better.\"), mdx(\"p\", null, \"Used to swap staging and production slots.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"8ec4faaa-c8b7-54b5-b008-81d57789d62a","fields":{"slug":"/azure/azure-app-service/azure-app-service-plan","title":"Azure App Service Plan"}}}},{"contextLine":"See [[azure-app-service-scripts#List available outbound addresses]].","targetAnchor":"List available outbound addresses","refWord":"azure-app-service-scripts","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"basic-note\",\n  \"foam_template\": {\n    \"filepath\": \"./azure-cli/azure-app-service-scripts.md\"\n  },\n  \"tags\": \"azure, cloud, cli\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure App Service Scripts\"), mdx(\"p\", null, \"This page lists some scripts useful for operating with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-service\",\n    \"title\": \"azure-app-service\"\n  }, \"[[azure-app-service]]\"), \".\"), mdx(\"h2\", null, \"List the available runtimes\"), mdx(\"p\", null, \"You can see the list of available runtimes for Azure App Service instances by specifying the OS, which can only be Linux or Windows\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"az webapp list-runtimes --os-type linux\"))), mdx(\"p\", null, \"or\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"az webapp list-runtimes --os-type windows\"))), mdx(\"h2\", null, \"List available outbound addresses\"), mdx(\"p\", null, \"List available IP addresses\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"az webapp show \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n    --resource-group \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"group_name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \">\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n    --name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"app_name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \">\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \" \\n    --query outboundIpAddresses \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n    --output tsv\"))), mdx(\"p\", null, \"To find all possible outbound IP addresses for your app, regardless of pricing tiers, run the following command in the Cloud Shell.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"az webapp show \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n    --resource-group \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"group_name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \">\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \" \\n    --name \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"<\"), \"app_name\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \">\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \" \\n    --query possibleOutboundIpAddresses \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n    --output tsv\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c1a3d3cd-21f7-50b9-baf3-b9bb1df010e3","fields":{"slug":"/azure-cli/azure-app-service-scripts","title":"Azure App Service Scripts"}}}}],"inboundReferences":[{"contextLine":"Related: [[azure-app-services-multitenant-networking]]","referrer":{"parent":{"id":"3aff0a6d-1e80-568e-8a4b-2952def2f7b1","fields":{"slug":"/azure/azure-app-service/azure-app-service","title":"Azure App Service"}}}}]},"fields":{"slug":"/azure/azure-app-service/azure-app-services-multitenant-networking","title":"Multitenant App Service networking"}}},"pageContext":{"id":"907b28de-29dc-5336-addf-68d7a5646a5b","refWordMdxSlugDict":{"azure-virtual-network":"azure/azure-virtual-network","azure-expressroute":"azure/azure-expressroute","azure-network-scripts":"azure-cli/azure-network-scripts","azure-app-service-plan":"azure/azure-app-service/azure-app-service-plan","azure-app-service":"azure/azure-app-service/azure-app-service","scale-up-down":"general/scale-up-down","scale-in-out":"general/scale-in-out","azure-app-services-deployment-slots":"azure/azure-app-service/azure-app-services-deployment-slots","azure-app-services-multitenant-networking":"azure/azure-app-service/azure-app-services-multitenant-networking","azure-app-service-scripts":"azure-cli/azure-app-service-scripts","azure-app-service-autoscale":"azure/azure-app-service/azure-app-service-autoscale"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}