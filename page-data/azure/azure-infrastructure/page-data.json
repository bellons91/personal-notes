{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-infrastructure",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure,   az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure infrastructure\"), mdx(\"p\", null, \"Azure is structured into sub parts.\"), mdx(\"p\", null, \"There is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"physical structure\"), \", in which every datacenter is located in an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \", each Availability zone is located within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region\",\n    \"title\": \"azure-region\"\n  }, \"[[azure-region]]\"), \", and Regions are coupled in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/4bfbbf9403972602e6247e19e5d09da8/physical-infrastructure.png\",\n    \"alt\": \"Physical Infrastructure\"\n  })), mdx(\"p\", null, \"There is a sort of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"logical infrastructure\"), \" used to manage resources: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/resource-groups\",\n    \"title\": \"resource-groups\"\n  }, \"[[resource-groups]]\"), \" are grouped in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/subscriptions\",\n    \"title\": \"subscriptions\"\n  }, \"[[subscriptions]]\"), \", which in turn are grouped in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/management-groups\",\n    \"title\": \"management-groups\"\n  }, \"[[management-groups]]\"), \".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/c3951f0abb8fee68fefab92fee1c4c75/logical-infrastructure.png\",\n    \"alt\": \"Logical Infrastructure\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-infrastructure","title":"Azure infrastructure"}]},"outboundReferences":[{"contextLine":"There is a **physical structure**, in which every datacenter is located in an [[azure-availability-zones]], each Availability zone is located within an [[azure-region]], and Regions are coupled in [[azure-region-pairs]].","targetAnchor":null,"refWord":"azure-availability-zones","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Availability Zones\"), mdx(\"p\", null, \"Availability zones are physically separate datacenters within an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region\",\n    \"title\": \"azure-region\"\n  }, \"[[azure-region]]\"), \".\"), mdx(\"p\", null, \"Each availability zone is independent, and the internal datacenters have independent power, cooling, and networking. They are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"isolated\"), \" from other Availability Zones.\"), mdx(\"p\", null, \"Availability Zones are connected through a secure, high-speed network.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Not all Azure Regions currently support availability zones.\"), \" When a Region supports Availability Zones, there are at least three zones within that region.\"), mdx(\"h2\", null, \"Practical usage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"achieve \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"high-availability\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"co-locate computing, storage, networking\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"replicate data\")), mdx(\"h2\", null, \"Azure Services that support Availability Zones\"), mdx(\"p\", null, \"Availability zones are primarily for VMs, managed disks, load balancers, and SQL databases.\"), mdx(\"p\", null, \"Not every Azure Service supports Availability Zones (sometimes, it's not even necessary).\"), mdx(\"p\", null, \"There are 3 categories of service usage:\"), mdx(\"h3\", null, \"Zonal Services\"), mdx(\"p\", null, \"A service is pinned to a specific zone. You can combine multiple zonal deployments across different zones to meet high reliability requirements.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"You're responsible for managing data replication\"), \" and distributing requests across zones.\"), mdx(\"p\", null, \"If an outage occurs in a single availability zone, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"you're responsible for failover\"), \" to another availability zone.\"), mdx(\"p\", null, \"A resource can be deployed to a specific, self-selected availability zone to achieve \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"more stringent latency or performance requirements\"), \".\"), mdx(\"p\", null, \"Eg: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-virtual-machines\",\n    \"title\": \"azure-virtual-machines\"\n  }, \"[[azure-virtual-machines]]\"), \", IP Addresses. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Typically supported by \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/iaas\",\n    \"title\": \"iaas\"\n  }, \"[[iaas]]\"), \"\"), \".\"), mdx(\"h3\", null, \"Zone-redundant service\"), mdx(\"p\", null, \"Some services are replicated across several zones (eg: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Azure-SQL\",\n    \"title\": \"Azure SQL\"\n  }, \"[[Azure SQL]]\"), \"); Microsoft manages spreading requests across zones and the replication of data across zones. If an outage occurs in a single availability zone, Microsoft manages failover automatically. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Typically supported by \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/paas\",\n    \"title\": \"paas\"\n  }, \"[[paas]]\"), \"\"), \".\"), mdx(\"p\", null, \"Zone-redundant services replicate the data across multiple zones so that a failure in one zone doesn't affect the high availability of the data.\"), mdx(\"h3\", null, \"Non-regional services (Always-available services)\"), mdx(\"p\", null, \"Some services must be available regardless of the actual location so they span across worldwide zones.\"), mdx(\"p\", null, \"These services must be resilient to zone-wide outages and region-wide outages\"), mdx(\"p\", null, \"Eg: Azure Active Directory\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"cb819640-b6fa-5195-9a2e-f74bdf287afc","fields":{"slug":"/azure/azure-availability-zones","title":"Azure Availability Zones"}}}},{"contextLine":"There is a **physical structure**, in which every datacenter is located in an [[azure-availability-zones]], each Availability zone is located within an [[azure-region]], and Regions are coupled in [[azure-region-pairs]].","targetAnchor":null,"refWord":"azure-region","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Regions\"), mdx(\"p\", null, \"A region is a geographical area on the planet that contains one or more datacenters that are nearby and networked together with a low-latency network.\"), mdx(\"p\", null, \"Some features are only available in certain regions.\"), mdx(\"p\", null, \"Some other services are not bound to a specific region because they are worldwide; examples are Azure Active Directory, Azure DNS, and Azure Traffic Manager.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"d0f73437-04db-515a-a0fa-f190496bc22b","fields":{"slug":"/azure/azure-region","title":"Azure Regions"}}}},{"contextLine":"There is a **physical structure**, in which every datacenter is located in an [[azure-availability-zones]], each Availability zone is located within an [[azure-region]], and Regions are coupled in [[azure-region-pairs]].","targetAnchor":null,"refWord":"azure-region-pairs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Region Pairs\"), mdx(\"p\", null, \"It may happen that an event is so big that it impacts a whole \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region\",\n    \"title\": \"azure-region\"\n  }, \"[[azure-region]]\"), \". In that case, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" are not enough to prevent data loss and application downtime. Therefore, we need to pair regions so that one acts as a fallback for the other.\"), mdx(\"p\", null, \"Most Azure regions are paired with another region within the same geography (WestUS is paired with EastUS, for example). The minimum distance is 300 miles, so the likelihood of an event that affects both regions is small.\"), mdx(\"h2\", null, \"Advantages of Region Pairs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If an extensive Azure outage occurs, one region out of every pair is \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"prioritized\"), \" to make sure at least one is restored as quickly as possible for applications hosted in that region pair.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Planned Azure \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"updates are rolled out to paired regions one region at a time\"), \" to minimize downtime and risk of application outage.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Data\"), \" continues to reside within the same geography as its pair for \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"tax- and law-enforcement jurisdiction purposes\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"14618d7a-45f9-5662-93c9-91808dd7c992","fields":{"slug":"/azure/azure-region-pairs","title":"Azure Region Pairs"}}}},{"contextLine":"There is a sort of **logical infrastructure** used to manage resources: [[resource-groups]] are grouped in [[subscriptions]], which in turn are grouped in [[management-groups]].","targetAnchor":null,"refWord":"resource-groups","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Resource Groups\"), mdx(\"p\", null, \"Resource groups are simply groupings of resources. When you create a resource, you\\u2019re required to place it into a resource group.\"), mdx(\"p\", null, \"A Resource Group can contain one or more resources, but a resource can belong to only one Resource group.\"), mdx(\"p\", null, \"Resource groups \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cannot be nested\"), \".\"), mdx(\"p\", null, \"When you apply an action (eg: delete, change permissions) to a resource group, that action will apply to all the resources within the resource group.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"7796b04a-1b67-528d-b8c5-4694fc92abd0","fields":{"slug":"/azure/resource-groups","title":"Resource Groups"}}}},{"contextLine":"There is a sort of **logical infrastructure** used to manage resources: [[resource-groups]] are grouped in [[subscriptions]], which in turn are grouped in [[management-groups]].","targetAnchor":null,"refWord":"subscriptions","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Subscriptions\"), mdx(\"p\", null, \"Subscriptions are a unit of management, billing, and scale.\"), mdx(\"p\", null, \"A subscription provides you with authenticated and authorized access to Azure products and services. In fact, to create a subscription you need an Azure AD account.\"), mdx(\"p\", null, \"You can use Azure subscriptions to define boundaries around Azure products, services, and resources.\"), mdx(\"p\", null, \"Subscriptions are a way to organize \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/resource-groups\",\n    \"title\": \"resource-groups\"\n  }, \"[[resource-groups]]\"), \" and apply consistent policies.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a5c5207c-3181-5f12-b1e1-d792c194a373","fields":{"slug":"/azure/subscriptions","title":"Azure Subscriptions"}}}},{"contextLine":"There is a sort of **logical infrastructure** used to manage resources: [[resource-groups]] are grouped in [[subscriptions]], which in turn are grouped in [[management-groups]].","targetAnchor":null,"refWord":"management-groups","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, az-900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Management groups\"), mdx(\"p\", null, \"Management groups are a way to organize \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/subscriptions\",\n    \"title\": \"subscriptions\"\n  }, \"[[subscriptions]]\"), \".\"), mdx(\"p\", null, \"Having Management groups is helpful when you have to deal with multiple clients, and you want to organize bills, policies, and compliance in a centralized way.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Management groups can be nested\"), \" up to 6 levels of depth.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"801da99a-74d2-57c6-ac98-dfdf5f462af5","fields":{"slug":"/azure/management-groups","title":"Management groups"}}}}],"inboundReferences":[{"contextLine":"- [[azure-infrastructure]]","referrer":{"parent":{"id":"c34fa374-8cf9-5420-b22a-1dcb7706b8ea","fields":{"slug":"/azure-certifications/az-900","title":"AZ-900 - Azure Fundamentals"}}}}]},"fields":{"slug":"/azure/azure-infrastructure","title":"Azure infrastructure"}}},"pageContext":{"id":"c6e72d47-70e2-5e4e-853d-a24c38790616","refWordMdxSlugDict":{"azure-availability-zones":"azure/azure-availability-zones","azure-region":"azure/azure-region","azure-virtual-machines":"azure/azure-virtual-machines","iaas":"general/iaas","shared-responsibility-model":"general/shared-responsibility-model","saas":"general/saas","azure-arc":"azure/azure-arc","azure-resource-manager":"azure/azure-resource-manager","arm-templates":"azure/arm-templates","azure-bicep":"azure/azure-bicep","azure-advisor":"azure/azure-advisor","azure-cloud-shell":"azure/azure-cloud-shell","azure-powershell":"azure/azure-powershell","paas":"general/paas","microsoft-purview":"azure/microsoft-purview","azure-app-service":"azure/azure-app-service/azure-app-service","scale-up-down":"general/scale-up-down","scale-in-out":"general/scale-in-out","azure-app-services-deployment-slots":"azure/azure-app-service/azure-app-services-deployment-slots","azure-app-service-plan":"azure/azure-app-service/azure-app-service-plan","azure-app-services-multitenant-networking":"azure/azure-app-service/azure-app-services-multitenant-networking","azure-virtual-network":"azure/azure-virtual-network","azure-expressroute":"azure/azure-expressroute","azure-network-scripts":"azure-cli/azure-network-scripts","azure-app-service-scripts":"azure-cli/azure-app-service-scripts","azure-app-service-autoscale":"azure/azure-app-service/azure-app-service-autoscale","azure-container-apps":"azure/azure-container/azure-container-apps","azure-kubernetes-service":"azure/azure-kubernetes-service","azure-entra":"azure/azure-entra/azure-entra","conditional-access":"azure/conditional-access","azure-entra-domain-services":"azure/azure-entra/azure-entra-domain-services","fido2-authentication":"general/fido2-authentication","azure-entra-external-identities":"azure/azure-entra/azure-entra-external-identities","azure-virtual-desktop":"azure/azure-virtual-desktop","azure-storage-account-scripts":"azure-cli/azure-storage-account-scripts","virtual-machines-size":"azure/virtual-machines-size","optimize-virtual-machines":"azure/optimize-virtual-machines","azure-vm-scripts":"azure-cli/azure-vm-scripts","azure-region-pairs":"azure/azure-region-pairs","resource-groups":"azure/resource-groups","subscriptions":"azure/subscriptions","management-groups":"azure/management-groups"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}