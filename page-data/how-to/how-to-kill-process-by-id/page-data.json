{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/how-to/how-to-kill-process-by-id",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"Process, CMD, PowerShell, Windows\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"How to Kill Process by Id on PowerShell\"), mdx(\"p\", null, \"To retrieve the info about a process given its PID, for example, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"85188\"), \", you can use the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PowerShell\"), \" command \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Get-Process\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cmd\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cmd\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"Get-Process -ID 85188\"))), mdx(\"p\", null, \"That will return some info, such as the name of the process:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/25f7daeb92950bc9bd46437eb4a56b85/get-process-info.png\",\n    \"alt\": \"Process Info\"\n  })), mdx(\"p\", null, \"And then, to kill it, you can run\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cmd\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cmd\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"taskkill /PID 85188 /F\"))), mdx(\"h2\", null, \"Related notes\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/how-to-find-the-process-bound-to-a-port\",\n    \"title\": \"how-to-find-the-process-bound-to-a-port\"\n  }, \"[[how-to-find-the-process-bound-to-a-port]]\"), \"\"), mdx(\"h2\", null, \"External references\"), mdx(\"p\", null, \"\\uD83D\\uDD17 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/smpnjn/how-to-kill-a-process-running-on-a-port-3pdf\"\n  }, \"How to Kill a Process Running on a Port\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#how-to-kill-process-by-id-on-powershell","title":"How to Kill Process by Id on PowerShell","items":[{"url":"#related-notes","title":"Related notes"},{"url":"#external-references","title":"External references"}]}]},"outboundReferences":[{"contextLine":"[[how-to-find-the-process-bound-to-a-port]]","targetAnchor":null,"refWord":"how-to-find-the-process-bound-to-a-port","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"TCP, CMD, PowerShell, Windows, Linux\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"How to find the process that is bound to a Port\"), mdx(\"p\", null, \"If you have the port \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"1313\"), \" used by a process, and you want to kill that process to free up that port, you can follow these steps.\"), mdx(\"p\", null, \"Depending on the machine and the shell, there are different ways.\"), mdx(\"h2\", null, \"PowerShell or Cmd on Windows\"), mdx(\"p\", null, \"Using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PowerShell on Windows\"), \", use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"netstat\"), \" command to get the network info, and filter the result via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"findstr\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cmd\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cmd\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"netstat -ano | findstr :1313\"))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"netstat\"), \" accepts different flags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-a\"), \": Displays all connections and listening ports;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-n\"), \": Displays addresses and port numbers in numerical form.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-o\"), \": Displays the owning process ID associated with each connection.\")), mdx(\"p\", null, \"It returns all the network info:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/a23ea2dc96a7588b8ef42588127cfcc3/netstat-powershell.png\",\n    \"alt\": \"Netstat shows info about the network connections\"\n  })), mdx(\"p\", null, \"Then you can filter the result with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"findstr\"), \" by specifying the text to be searched:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/616a652fdf6e2cf1167015617898f045/netstat-filtered.png\",\n    \"alt\": \"Findstr can be used to filter cmd results\"\n  })), mdx(\"p\", null, \"Now, locate the Process ID (PID). In this case, it's \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"74720\"), \".\"), mdx(\"h2\", null, \"Linux shell\"), mdx(\"p\", null, \"Similarly, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"netstat\"), \" works on Linux. But with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"different flags\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-l\"), \": display listening server sockets;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-t\"), \": filter by connection of type TCP;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-p\"), \": display PID/Program name for sockets;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-n\"), \": don't resolve names (Show IP instead of Host Name);\")), mdx(\"p\", null, \"So, run:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cmd\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cmd\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"netstat -ltnp\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/5c98c437a285d3460edeb116d14bb0c5/netstat-linux.png\",\n    \"alt\": \"Netstat on Linux\"\n  })), mdx(\"p\", null, \"And, to filter the result, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grep\"), \" command:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cmd\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-cmd\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"netstat -ltnp | grep :1313\"))), mdx(\"p\", null, \"And then locate the port.\"), mdx(\"h2\", null, \"External references\"), mdx(\"p\", null, \"\\uD83D\\uDD17 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/smpnjn/how-to-kill-a-process-running-on-a-port-3pdf\"\n  }, \"How to Kill a Process Running on a Port\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"aebe8a88-a10f-55ea-85db-d44159bc7ee3","fields":{"slug":"/how-to/how-to-find-the-process-bound-to-a-port","title":"How to find the process that is bound to a Port"}}}}],"inboundReferences":[]},"fields":{"slug":"/how-to/how-to-kill-process-by-id","title":"How to Kill Process by Id on PowerShell"}}},"pageContext":{"id":"2ecff95a-fbf6-5c5b-9cf5-41d10f2315a9","refWordMdxSlugDict":{"how-to-find-the-process-bound-to-a-port":"how-to/how-to-find-the-process-bound-to-a-port"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}