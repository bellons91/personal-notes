{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-storage-account/azure-blob-container",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, az-204, storage, azure-blob-storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Blob Container\"), mdx(\"p\", null, \"A container organizes a set of blobs, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"similar to a directory\"), \" in a file system. A storage account can include an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unlimited number of containers\"), \", and a container can store an unlimited number of blobs.\"), mdx(\"p\", null, \"A container name must be a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"valid DNS name\"), \", as it forms part of the unique URI (Uniform resource identifier) used to address the container or its blobs. Follow these rules when naming a container:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Container names can be between \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"3 and 63 characters long\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Container names must start with a letter or number, and can contain only lowercase letters, numbers, and the dash (-) character.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Two or more consecutive dash characters aren't permitted in container names.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-blob-container","title":"Azure Blob Container"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"Each Storage Account contains one or more [[azure-blob-container]], and each Blob Container contains","referrer":{"parent":{"id":"5f710feb-e51c-5720-9115-751ec81a777d","fields":{"slug":"/azure/azure-storage-account/azure-blob-storage","title":"Azure Blob Storage"}}}}]},"fields":{"slug":"/azure/azure-storage-account/azure-blob-container","title":"Azure Blob Container"}}},"pageContext":{"id":"53899d5e-bd69-5e50-8361-954f83b7cfb9","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}