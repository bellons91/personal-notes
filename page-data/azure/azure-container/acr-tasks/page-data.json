{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-container/acr-tasks",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"az-204, azure, containers, acr, docker\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ACR Tasks\"), mdx(\"p\", null, \"ACR Tasks is a suite of features within \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-container-registry\",\n    \"title\": \"azure-container-registry\"\n  }, \"[[azure-container-registry]]\"), \".\"), mdx(\"p\", null, \"With ACR Tasks, to automatically rebuild application images when their base images are updated. You can also automate image builds when there is a new code commit in the source Git repository.\"), mdx(\"p\", null, \"You can use ACR Tasks to streamline building, testing, pushing, and deploying images in Azure.\"), mdx(\"p\", null, \"It provides cloud-based container image building for platforms including Linux, Windows, and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-resource-manager\",\n    \"title\": \"azure-resource-manager\"\n  }, \"[[azure-resource-manager]]\"), \", and can automate OS and framework patching for your Docker containers.\"), mdx(\"p\", null, \"Each ACR Task has an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"associated source code context\"), \" - the location of a set of source files used to build a container image or other artifact. Example contexts include a Git repository or a local filesystem.\"), mdx(\"h2\", null, \"Quick Tasks\"), mdx(\"p\", null, \"Quick tasks provide an integrated development experience by offloading your container image builds to Azure.\"), mdx(\"p\", null, \"With quick tasks, you can verify your automated build definitions and catch potential problems prior to committing your code.\"), mdx(\"p\", null, \"Build and push a single container image to a container registry on-demand, in Azure, without needing a local Docker Engine installation.\"), mdx(\"p\", null, \"They are the corresponding for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker build\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker push\"), \" for the cloud.\"), mdx(\"p\", null, \"An example of command is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"az acr build\"), \", which takes the context, sends it to ACR Tasks, and pushes the built image to its registry upon completion.\"), mdx(\"h2\", null, \"Automatically triggered tasks\"), mdx(\"p\", null, \"Enable one or more triggers to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"build an image\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Trigger on source code update\"), \": you can configure to build the image every time new code is committed, or a pull request is made or updated, by using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"az acr task create\"), \", specifying the Git repo, the branch and the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docker-file\",\n    \"title\": \"docker-file\"\n  }, \"[[docker-file]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Trigger on base image update\"), \": You can set up an ACR task to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"track a dependency on a base image\"), \" when it builds an application image. When the updated base image is pushed to your registry, or a base image is updated in a public repo such as in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Docker-Hub\",\n    \"title\": \"Docker Hub\"\n  }, \"[[Docker Hub]]\"), \", ACR Tasks can automatically build any application images based on it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Trigger on a schedule\"), \": set up one or more timer triggers when you create or update the task. Scheduling a task is useful for running container workloads on a defined schedule, or running \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"maintenance operations or tests on images\"), \" pushed regularly to your registry.\")), mdx(\"h2\", null, \"Multi-step tasks\"), mdx(\"p\", null, \"Extend the single image build-and-push capability of ACR Tasks with multi-step, multi-container-based workflows.\"), mdx(\"p\", null, \"Multi-step tasks, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"defined in a YAML file\"), \" specify individual build and push operations for container images or other artifacts. They can also define the execution of one or more containers, with each step using the container as its execution environment.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#acr-tasks","title":"ACR Tasks","items":[{"url":"#quick-tasks","title":"Quick Tasks"},{"url":"#automatically-triggered-tasks","title":"Automatically triggered tasks"},{"url":"#multi-step-tasks","title":"Multi-step tasks"}]}]},"outboundReferences":[{"contextLine":"ACR Tasks is a suite of features within [[azure-container-registry]].","targetAnchor":null,"refWord":"azure-container-registry","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"az-204, azure, containers, acr, docker\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Container Registry (ACR)\"), mdx(\"p\", null, \"ACR is a registry for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Docker-Containers\",\n    \"title\": \"Docker Containers\"\n  }, \"[[Docker Containers]]\"), \".\"), mdx(\"p\", null, \"You can use ACR to manage containerized applications across clusters of hosts, like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Kubernetes\",\n    \"title\": \"Kubernetes\"\n  }, \"[[Kubernetes]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"DC/OS\",\n    \"title\": \"DC/OS\"\n  }, \"[[DC/OS]]\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Docker-Swarm\",\n    \"title\": \"Docker Swarm\"\n  }, \"[[Docker Swarm]]\"), \".\"), mdx(\"p\", null, \"There are Azure services that pull the application content from ACR, such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-kubernetes-service\",\n    \"title\": \"azure-kubernetes-service\"\n  }, \"[[azure-kubernetes-service]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-app-service\",\n    \"title\": \"azure-app-service\"\n  }, \"[[azure-app-service]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Service-Fabric\",\n    \"title\": \"Service Fabric\"\n  }, \"[[Service Fabric]]\"), \", and others.\"), mdx(\"p\", null, \"Developers can push \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Docker-Images\",\n    \"title\": \"Docker Images\"\n  }, \"[[Docker Images]]\"), \" to ACR from a CI pipeline.\"), mdx(\"p\", null, \"You can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/acr-tasks\",\n    \"title\": \"acr-tasks\"\n  }, \"[[acr-tasks]]\"), \" to automatically rebuild application images when their base images are updated. You can also automate image builds when there is a new code commit in the source Git repository.\"), mdx(\"p\", null, \"In Azure Container Registry you can also store \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Helm-charts\",\n    \"title\": \"Helm charts\"\n  }, \"[[Helm charts]]\"), \".\"), mdx(\"p\", null, \"There are several pricing tiers:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Basic\"), \": cost-optimized version, just for learning. It provides lower storage and throughput.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Standard\"), \": ideal for most production scenarios. It has more storage and image throughput.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Premium\"), \": it also has \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"zone-replication\"), \" of the registry (the registry is replicated to a minimum of three separate zones in each enabled region), \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/content-trust\",\n    \"title\": \"content trust\"\n  }, \"[[content trust]]\"), \" for image tag signing, and private link with private endpoints to restrict the access to the registry.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All container images in your registry are encrypted at rest\"), \". Azure automatically encrypts an image before storing it, and decrypts it on-the-fly when you or your applications and services pull the image.\"), mdx(\"p\", null, \"Azure Container Registry \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stores data in the region where the registry is created\"), \", to help customers meet data residency and compliance requirements. Azure may also store registry data in a paired region in the same geography. If a regional outage occurs, the registry data may become unavailable and isn't automatically recovered. You can then choose to enable geo-replication.\"), mdx(\"p\", null, \"Azure Container Registry allows you to create as many repositories, images, layers, or tags as you need, up to the registry storage limit. The number of images and tags affects the performance of the registry, so you should remember to delete older versions and unused images.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fb5b5433-5cd8-5caf-9d3e-68b8611bfd91","fields":{"slug":"/azure/azure-container/azure-container-registry","title":"Azure Container Registry (ACR)"}}}},{"contextLine":"It provides cloud-based container image building for platforms including Linux, Windows, and [[azure-resource-manager]], and can automate OS and framework patching for your Docker containers.","targetAnchor":null,"refWord":"azure-resource-manager","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, az-900, infrastructure\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"ARM (Azure Resource Manager)\"), mdx(\"p\", null, \"Azure Resource Manager (ARM) is the deployment and management service for Azure.\"), mdx(\"p\", null, \"When a user sends a request from any Azure tools, APIs, or SDKs, ARM receives the request. ARM authenticates and authorizes the request. Then, ARM sends the request to the Azure service, which takes the requested action.\"), mdx(\"p\", null, \"With Azure Resource Manager, you can:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manage your infrastructure through \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"declarative templates\"), \" rather than scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy, manage, and monitor all the resources for your solution as a group rather than handling these resources individually.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-deploy your solution throughout the development life-cycle and have confidence your resources are deployed in a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"consistent state\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Define the dependencies between resources\"), \", so they're deployed in the correct order.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Apply access control to all services because RBAC is natively integrated into the management platform.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Apply tags to resources to organize all the resources in your subscription logically.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clarify your organization's billing by viewing costs for a group of resources with the same tag.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Orchestrates the creation of those resources in parallel.\")), mdx(\"p\", null, \"You can define the infrastructure using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/arm-templates\",\n    \"title\": \"arm-templates\"\n  }, \"[[arm-templates]]\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-bicep\",\n    \"title\": \"azure-bicep\"\n  }, \"[[azure-bicep]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"0fc1cac1-d092-5d19-9bcd-e7f327313214","fields":{"slug":"/azure/azure-resource-manager","title":"ARM (Azure Resource Manager)"}}}},{"contextLine":"- **Trigger on source code update**: you can configure to build the image every time new code is committed, or a pull request is made or updated, by using `az acr task create`, specifying the Git repo, the branch and the [[docker-file]].","targetAnchor":null,"refWord":"docker-file","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"docker\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Dockerfile\"), mdx(\"p\", null, \"A Dockerfile is a script that contains a series of instructions that are used to build a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Docker\",\n    \"title\": \"Docker\"\n  }, \"[[Docker]]\"), \" image.\"), mdx(\"p\", null, \"Dockerfiles typically include the following information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"base or parent image\"), \" we use to create the new image\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Commands to update the base OS and install other software\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build artifacts to include, such as a developed application\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Services to expose, such a storage and network configuration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Command to run\"), \" when the container is launched\")), mdx(\"p\", null, \"Here's an example of a Dockerfile to build a .NET application:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"dockerfile\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-dockerfile\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dockerfile\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Use the .NET 6 runtime as a base image\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token instruction\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"FROM\"), \" mcr.microsoft.com/dotnet/runtime:6.0\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Set the working directory to /app\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token instruction\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"WORKDIR\"), \" /app\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Copy the contents of the published app to the container's /app directory\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token instruction\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"COPY\"), \" bin/Release/net6.0/publish/ .\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Expose port 80 to the outside world\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token instruction\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"EXPOSE\"), \" 80\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"# Set the command to run when the container starts\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token instruction\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"CMD\"), \" [\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\\"dotnet\\\"\"), \", \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string\"\n  }, \"\\\"MyApp.dll\\\"\"), \"]\")))), mdx(\"p\", null, \"In particular:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FROM mcr.microsoft.com/dotnet/runtime:6.0\"), \": this command sets the base image to the .NET 6 runtime, which is needed to run .NET 6 apps.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WORKDIR /app\"), \": it sets the working directory \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"of the container structure\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/app\"), \". This is where app files will be copied.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"COPY bin/Release/net6.0/publish/ .\"), \": this command copies the content within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bin/Release/net6.0/publish\"), \" folder to the current directory (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \", which is now set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/app\"), \").\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EXPOSE 80\"), \": it opens the port 80 to the external world. When you run a container using this image, you have to ensure that you are accessing this \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"internal\"), \" port.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CMD [\\\"dotnet\\\", \\\"MyApp.dll\\\"]\"), \": this is the command to run when the container starts. In this case, we are running the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet\"), \" command with the name of the app's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/DLL\",\n    \"title\": \"DLL\"\n  }, \"[[DLL]]\"), \".\"), mdx(\"p\", null, \"Read more \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.docker.com/engine/reference/builder/\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"5ac4e951-8b4d-5968-ba53-c3712123d49b","fields":{"slug":"/general/docker-file","title":"Dockerfile"}}}}],"inboundReferences":[{"contextLine":"  - [[acr-tasks]]","referrer":{"parent":{"id":"054932f3-ea86-5292-9b43-2c04a7a196ec","fields":{"slug":"/azure-certifications/az-204","title":"AZ-204 - Developing Solutions for Microsoft Azure"}}}},{"contextLine":"You can use [[acr-tasks]] to automatically rebuild application images when their base images are updated. You can also automate image builds when there is a new code commit in the source Git repository.","referrer":{"parent":{"id":"fb5b5433-5cd8-5caf-9d3e-68b8611bfd91","fields":{"slug":"/azure/azure-container/azure-container-registry","title":"Azure Container Registry (ACR)"}}}}]},"fields":{"slug":"/azure/azure-container/acr-tasks","title":"ACR Tasks"}}},"pageContext":{"id":"dbe240aa-0fc5-58b2-8fe9-394c96256311","refWordMdxSlugDict":{"azure-container-registry":"azure/azure-container/azure-container-registry","Docker Swarm":"azure/azure-container/docker-swarm","azure-kubernetes-service":"azure/azure-kubernetes-service","azure-app-service":"azure/azure-app-service/azure-app-service","scale-up-down":"general/scale-up-down","scale-in-out":"general/scale-in-out","azure-app-services-deployment-slots":"azure/azure-app-service/azure-app-services-deployment-slots","azure-app-service-plan":"azure/azure-app-service/azure-app-service-plan","azure-app-services-multitenant-networking":"azure/azure-app-service/azure-app-services-multitenant-networking","azure-virtual-network":"azure/azure-virtual-network","azure-expressroute":"azure/azure-expressroute","azure-network-scripts":"azure-cli/azure-network-scripts","azure-app-service-scripts":"azure-cli/azure-app-service-scripts","azure-app-service-autoscale":"azure/azure-app-service/azure-app-service-autoscale","acr-tasks":"azure/azure-container/acr-tasks","azure-resource-manager":"azure/azure-resource-manager","arm-templates":"azure/arm-templates","azure-bicep":"azure/azure-bicep","docker-file":"general/docker-file"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}