{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/azure/azure-storage-account",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900 storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Account\"), mdx(\"p\", null, \"Cloud storage solution. It's an entry point to access data over HTTP or HTTPS.\"), mdx(\"p\", null, \"Using storage accounts, data is secure, highly available, durable, and scalable.\"), mdx(\"h2\", null, \"Blobs\"), mdx(\"p\", null, \"The storage service offers three types of blobs: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/block-blobs\",\n    \"title\": \"block-blobs\"\n  }, \"[[block-blobs]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/append-blobs\",\n    \"title\": \"append-blobs\"\n  }, \"[[append-blobs]]\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/page-blobs\",\n    \"title\": \"page-blobs\"\n  }, \"[[page-blobs]]\"), \". You specify the blob type when you create the blob. Once the blob has been created, its type cannot be changed.\"), mdx(\"p\", null, \"All blobs reflect committed changes immediately. Each version of the blob has a unique tag, called an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETag\"), \", that you can use with access conditions to assure you only change a specific instance of the blob.\"), mdx(\"p\", null, \"Any blob can be \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"leased for exclusive write access\"), \". When a blob is leased, only calls that include the current lease ID can modify the blob or (for block blobs) its blocks.\"), mdx(\"h2\", null, \"Storage Account Tiers\"), mdx(\"p\", null, \"There are several tiers, each of them with specific usage and supported services.\"), mdx(\"h3\", null, \"Standard general-purpose v2\"), mdx(\"p\", null, \"It's the type best for blobs, file shares, queues, and tables.\"), mdx(\"p\", null, \"Recommended for the most basic scenarios.\"), mdx(\"p\", null, \"Supported services:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-queue-storage\",\n    \"title\": \"azure-queue-storage\"\n  }, \"[[azure-queue-storage]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-table-storage\",\n    \"title\": \"azure-table-storage\"\n  }, \"[[azure-table-storage]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-files\",\n    \"title\": \"azure-files\"\n  }, \"[[azure-files]]\"), \"\")), mdx(\"p\", null, \"It supports all the redundancy options:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locally Redundant Storage (LRS) (see :\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Locally Redundant Storage (LRS)\"\n  }, \"[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geo-Redundant Storage (GRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Geo-Redundant Storage (GRS)\"\n  }, \"[[azure-storage-redundancy-types#Geo-Redundant Storage (GRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read-Access Geo-Redundant Storage (RA-GRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Read-Access Geo-Redundant Storage (RA-GRS)\"\n  }, \"[[azure-storage-redundancy-types#Read-Access Geo-Redundant Storage (RA-GRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zone-Redundant Storage (ZRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)\"\n  }, \"[[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Geo-Zone-Redundant Storage (GZRS) (see:\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Geo-Zone-Redundant Storage (GZRS)\"\n  }, \"[[azure-storage-redundancy-types#Geo-Zone-Redundant Storage (GZRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"\n  }, \"[[azure-storage-redundancy-types#Read-Access Geo-Zone-Redundant Storage (RA-GZRS)]]\"), \")\")), mdx(\"h3\", null, \"Premium block blobs\"), mdx(\"p\", null, \"Premium storage for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/block-blobs\",\n    \"title\": \"block-blobs\"\n  }, \"[[block-blobs]]\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/append-blobs\",\n    \"title\": \"append-blobs\"\n  }, \"[[append-blobs]]\"), \".\"), mdx(\"p\", null, \"Recommended for scenarios with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"high transaction rates\"), \" or that use smaller objects or require consistently low storage latency.\"), mdx(\"p\", null, \"It is available only for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"), mdx(\"p\", null, \"It supports:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locally Redundant Storage (LRS) (see :\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Locally Redundant Storage (LRS)\"\n  }, \"[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zone-Redundant Storage (ZRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)\"\n  }, \"[[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]]\"), \")\")), mdx(\"h3\", null, \"Premium file shares\"), mdx(\"p\", null, \"For file shares only.\"), mdx(\"p\", null, \"Recommended for enterprise or high-performance scale applications.\"), mdx(\"p\", null, \"Is available only for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-files\",\n    \"title\": \"azure-files\"\n  }, \"[[azure-files]]\"), \".\"), mdx(\"p\", null, \"It supports:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locally Redundant Storage (LRS) (see :\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Locally Redundant Storage (LRS)\"\n  }, \"[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zone-Redundant Storage (ZRS) (see: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/azure-storage-redundancy-types\",\n    \"title\": \"azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)\"\n  }, \"[[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]]\"), \")\")), mdx(\"h3\", null, \"Premium page blobs\"), mdx(\"p\", null, \"For \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/page-blobs\",\n    \"title\": \"page-blobs\"\n  }, \"[[page-blobs]]\"), \" only.\"), mdx(\"p\", null, \"It supports only Locally Redundant Storage (LRS)\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#azure-storage-account","title":"Azure Storage Account","items":[{"url":"#blobs","title":"Blobs"},{"url":"#storage-account-tiers","title":"Storage Account Tiers","items":[{"url":"#standard-general-purpose-v2","title":"Standard general-purpose v2"},{"url":"#premium-block-blobs","title":"Premium block blobs"},{"url":"#premium-file-shares","title":"Premium file shares"},{"url":"#premium-page-blobs","title":"Premium page blobs"}]}]}]},"outboundReferences":[{"contextLine":"The storage service offers three types of blobs: [[block-blobs]], [[append-blobs]], and [[page-blobs]]. You specify the blob type when you create the blob. Once the blob has been created, its type cannot be changed.","targetAnchor":null,"refWord":"block-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Block Blobs\"), mdx(\"p\", null, \"Block blobs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"store text and binary data\"), \". Block blobs are made up of blocks of data that can be managed individually. Block blobs can store up to about 190.7 TiB.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"), mdx(\"p\", null, \"Block blobs are optimized for uploading large amounts of data efficiently. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Block blobs are composed of blocks, each of which is identified by a block ID\"), \". A block blob can include up to 50,000 blocks. Each block in a block blob can be a different size, up to the maximum size permitted for the service version in use. \"), mdx(\"p\", null, \"To create or modify a block blob, write a set of blocks via the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Put Block\"), \" operation and then commit the blocks to a blob with the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Put Block List\"), \" operation. When you upload a block to a blob in your storage account, it is associated with the specified block blob, but it does not become part of the blob until you commit a list of blocks that includes the new block's ID. This allows you to upload blocks in parallel to optimize upload time.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fb9233cf-7957-5b4c-a8cb-c4a54317b635","fields":{"slug":"/azure/block-blobs","title":"Block Blobs"}}}},{"contextLine":"The storage service offers three types of blobs: [[block-blobs]], [[append-blobs]], and [[page-blobs]]. You specify the blob type when you create the blob. Once the blob has been created, its type cannot be changed.","targetAnchor":null,"refWord":"append-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Append Blobs\"), mdx(\"p\", null, \"Append blobs are made up of blocks like block blobs, but are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"optimized for append operations\"), \".\"), mdx(\"p\", null, \"Append blobs are ideal for scenarios such as logging data from virtual machines.\"), mdx(\"p\", null, \"When you modify an append blob, blocks are added to the end of the blob only, via the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Append Block\"), \" operation. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Updating or deleting of existing blocks is not supported\"), \". Unlike a block blob, an append blob does not expose its block IDs.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"21a5a10e-7c88-5638-a16a-647e941e30f7","fields":{"slug":"/azure/append-blobs","title":"Append Blobs"}}}},{"contextLine":"The storage service offers three types of blobs: [[block-blobs]], [[append-blobs]], and [[page-blobs]]. You specify the blob type when you create the blob. Once the blob has been created, its type cannot be changed.","targetAnchor":null,"refWord":"page-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Page Blobs\"), mdx(\"p\", null, \"Page blobs are a collection of 512-byte pages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"optimized for random read and write operations\"), \".\"), mdx(\"p\", null, \"Page blobs store random access files up to 8 TiB in size. Page blobs store virtual hard drive (VHD) files and serve as disks for Azure virtual machines.\"), mdx(\"p\", null, \"A write to a page blob can overwrite just one page, some pages, or up to 4 MiB of the page blob. Writes to page blobs happen in-place and are immediately committed to the blob.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"9a481184-ae9b-5731-8c95-6bd6ddccb9c1","fields":{"slug":"/azure/page-blobs","title":"Page Blobs"}}}},{"contextLine":"- [[azure-blob-storage]]","targetAnchor":null,"refWord":"azure-blob-storage","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900 storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Blob Storage\"), mdx(\"p\", null, \"Azure Blob Storage is a generic storage solution. You can store \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text and binary data\"), \" in an unstructured format.\"), mdx(\"p\", null, \"Blob storage can manage thousands of simultaneous uploads.\"), mdx(\"p\", null, \"Blob storage is ideal for:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serving images or documents directly to a browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing files for distributed access.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Streaming video and audio.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for backup and restore, disaster recovery, and archiving.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for analysis by an on-premises or Azure-hosted service.\")), mdx(\"p\", null, \"Objects can be accessed via HTTP or HTTPS, given that every object can be referenced using a specific URL.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.blob.core.windows.net\"), mdx(\"h2\", null, \"Blob Storage tiers\"), mdx(\"p\", null, \"To manage costs better you have to pick the right storage tier, depending on the expected usage.\"), mdx(\"h3\", null, \"Hot tier\"), mdx(\"p\", null, \"In the Hot tier, you keep your resources always available: it's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"good for data that is accessed often\"), \" because it allows you to access it quickly.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Costs are high for the storage\"), \" because you need to store the data in an optimized way, but \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"low for data access\"), \" because the data retrieval is optimized for reads.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\")), mdx(\"h3\", null, \"Cool tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"Costs are low for storage but high for data access.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 30 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Cold tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 90 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Archive tier\"), mdx(\"p\", null, \"This tier is for archiving data, so its costs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very high for data access\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very low for data storage\"), \".\"), mdx(\"p\", null, \"It's good for data that does not change for at least 180 days.\"), mdx(\"p\", null, \"Data is stored offline to reduce costs, but you will have higher costs to rehydrate and access data.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa2b859e-4c39-5b66-ab4f-e3f271b09384","fields":{"slug":"/azure/azure-blob-storage","title":"Azure Blob Storage"}}}},{"contextLine":"- [[azure-queue-storage]]","targetAnchor":null,"refWord":"azure-queue-storage","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Queue Storage\"), mdx(\"p\", null, \"Its purpose is to store a large number of messages. Once stored, those messages can be accessed using HTTP or HTTPS (only under authentication)messages.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Each individual message can be up to 64KB in size\"), \", but you don't have a limited number of messages (the only limit is the total storage of the storage account).\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.queue.core.windows.net\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"277f8689-6c8f-57e8-9454-bc6a839e3bca","fields":{"slug":"/azure/azure-queue-storage","title":"Azure Queue Storage"}}}},{"contextLine":"- [[azure-table-storage]]","targetAnchor":null,"refWord":"azure-table-storage","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Table Storage\"), mdx(\"p\", null, \"Azure Tables can be used to store large amounts of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"structured data\"), \".\"), mdx(\"p\", null, \" Azure tables are a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NoSQL datastore\"), \" that accepts authenticated calls from inside and outside the Azure cloud.\"), mdx(\"p\", null, \" Ideal for structured, non-relational data.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.table.core.windows.net\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"a3b24532-8e60-599e-a659-cae55845bb93","fields":{"slug":"/azure/azure-table-storage","title":"Azure Table Storage"}}}},{"contextLine":"- [[azure-files]]","targetAnchor":null,"refWord":"azure-files","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Files\"), mdx(\"p\", null, \"It's a fully managed solution to share files in the cloud using standard protocols, such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Server-Message-Block-(SMB)\",\n    \"title\": \"Server Message Block (SMB)\"\n  }, \"[[Server Message Block (SMB)]]\"), \" (accessible from Windows, Linux, and macOS clients) or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Network-File-System-(NFS)\",\n    \"title\": \"Network File System (NFS)\"\n  }, \"[[Network File System (NFS)]]\"), \" (accessible from Linux and macOS clients).\"), mdx(\"p\", null, \"Given that SMB and NFS are industry standards, you can replace your current file share with the one hosted on Azure.\"), mdx(\"p\", null, \"You can create file shares using Azure CLI and PowerShell commands.\"), mdx(\"p\", null, \"Files can be accessed using Azure Portal or Azure Storage Explorer.\"), mdx(\"p\", null, \"Azure files support high availability.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.file.core.windows.net\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"983689f8-8aa7-5d95-b748-0c31758b8177","fields":{"slug":"/azure/azure-files","title":"Azure Files"}}}},{"contextLine":"- Locally Redundant Storage (LRS) (see :[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]])","targetAnchor":"Locally Redundant Storage (LRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Geo-Redundant Storage (GRS) (see: [[azure-storage-redundancy-types#Geo-Redundant Storage (GRS)]])","targetAnchor":"Geo-Redundant Storage (GRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Read-Access Geo-Redundant Storage (RA-GRS) (see: [[azure-storage-redundancy-types#Read-Access Geo-Redundant Storage (RA-GRS)]])","targetAnchor":"Read-Access Geo-Redundant Storage (RA-GRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Zone-Redundant Storage (ZRS) (see: [[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]])","targetAnchor":"Zone-Redundant Storage (ZRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Geo-Zone-Redundant Storage (GZRS) (see:[[azure-storage-redundancy-types#Geo-Zone-Redundant Storage (GZRS)]])","targetAnchor":"Geo-Zone-Redundant Storage (GZRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Read-Access Geo-Zone-Redundant Storage (RA-GZRS) (see: [[azure-storage-redundancy-types#Read-Access Geo-Zone-Redundant Storage (RA-GZRS)]])","targetAnchor":"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"Premium storage for [[block-blobs]] and [[append-blobs]].","targetAnchor":null,"refWord":"block-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Block Blobs\"), mdx(\"p\", null, \"Block blobs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"store text and binary data\"), \". Block blobs are made up of blocks of data that can be managed individually. Block blobs can store up to about 190.7 TiB.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"), mdx(\"p\", null, \"Block blobs are optimized for uploading large amounts of data efficiently. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Block blobs are composed of blocks, each of which is identified by a block ID\"), \". A block blob can include up to 50,000 blocks. Each block in a block blob can be a different size, up to the maximum size permitted for the service version in use. \"), mdx(\"p\", null, \"To create or modify a block blob, write a set of blocks via the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Put Block\"), \" operation and then commit the blocks to a blob with the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Put Block List\"), \" operation. When you upload a block to a blob in your storage account, it is associated with the specified block blob, but it does not become part of the blob until you commit a list of blocks that includes the new block's ID. This allows you to upload blocks in parallel to optimize upload time.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fb9233cf-7957-5b4c-a8cb-c4a54317b635","fields":{"slug":"/azure/block-blobs","title":"Block Blobs"}}}},{"contextLine":"Premium storage for [[block-blobs]] and [[append-blobs]].","targetAnchor":null,"refWord":"append-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Append Blobs\"), mdx(\"p\", null, \"Append blobs are made up of blocks like block blobs, but are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"optimized for append operations\"), \".\"), mdx(\"p\", null, \"Append blobs are ideal for scenarios such as logging data from virtual machines.\"), mdx(\"p\", null, \"When you modify an append blob, blocks are added to the end of the blob only, via the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Append Block\"), \" operation. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Updating or deleting of existing blocks is not supported\"), \". Unlike a block blob, an append blob does not expose its block IDs.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"21a5a10e-7c88-5638-a16a-647e941e30f7","fields":{"slug":"/azure/append-blobs","title":"Append Blobs"}}}},{"contextLine":"It is available only for [[azure-blob-storage]].","targetAnchor":null,"refWord":"azure-blob-storage","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900 storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Blob Storage\"), mdx(\"p\", null, \"Azure Blob Storage is a generic storage solution. You can store \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text and binary data\"), \" in an unstructured format.\"), mdx(\"p\", null, \"Blob storage can manage thousands of simultaneous uploads.\"), mdx(\"p\", null, \"Blob storage is ideal for:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serving images or documents directly to a browser.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing files for distributed access.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Streaming video and audio.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for backup and restore, disaster recovery, and archiving.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storing data for analysis by an on-premises or Azure-hosted service.\")), mdx(\"p\", null, \"Objects can be accessed via HTTP or HTTPS, given that every object can be referenced using a specific URL.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.blob.core.windows.net\"), mdx(\"h2\", null, \"Blob Storage tiers\"), mdx(\"p\", null, \"To manage costs better you have to pick the right storage tier, depending on the expected usage.\"), mdx(\"h3\", null, \"Hot tier\"), mdx(\"p\", null, \"In the Hot tier, you keep your resources always available: it's \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"good for data that is accessed often\"), \" because it allows you to access it quickly.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Costs are high for the storage\"), \" because you need to store the data in an optimized way, but \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"low for data access\"), \" because the data retrieval is optimized for reads.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\")), mdx(\"h3\", null, \"Cool tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"Costs are low for storage but high for data access.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 30 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Cold tier\"), mdx(\"p\", null, \"Data is stored in a way that is optimal for long-term data storage but whose access is not optimized.\"), mdx(\"p\", null, \"This tier is good \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"for data that is accessed infrequently\"), \" and that does not change for at least 90 days.\"), mdx(\"p\", null, \"Some considerations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at account level;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be set at blob level, during or after the upload;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has lower SLA for availability, but higher SLA for durability, latency, and thoughput.\")), mdx(\"h3\", null, \"Archive tier\"), mdx(\"p\", null, \"This tier is for archiving data, so its costs are \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very high for data access\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"very low for data storage\"), \".\"), mdx(\"p\", null, \"It's good for data that does not change for at least 180 days.\"), mdx(\"p\", null, \"Data is stored offline to reduce costs, but you will have higher costs to rehydrate and access data.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa2b859e-4c39-5b66-ab4f-e3f271b09384","fields":{"slug":"/azure/azure-blob-storage","title":"Azure Blob Storage"}}}},{"contextLine":"- Locally Redundant Storage (LRS) (see :[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]])","targetAnchor":"Locally Redundant Storage (LRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Zone-Redundant Storage (ZRS) (see: [[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]])","targetAnchor":"Zone-Redundant Storage (ZRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"Is available only for [[azure-files]].","targetAnchor":null,"refWord":"azure-files","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Files\"), mdx(\"p\", null, \"It's a fully managed solution to share files in the cloud using standard protocols, such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Server-Message-Block-(SMB)\",\n    \"title\": \"Server Message Block (SMB)\"\n  }, \"[[Server Message Block (SMB)]]\"), \" (accessible from Windows, Linux, and macOS clients) or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Network-File-System-(NFS)\",\n    \"title\": \"Network File System (NFS)\"\n  }, \"[[Network File System (NFS)]]\"), \" (accessible from Linux and macOS clients).\"), mdx(\"p\", null, \"Given that SMB and NFS are industry standards, you can replace your current file share with the one hosted on Azure.\"), mdx(\"p\", null, \"You can create file shares using Azure CLI and PowerShell commands.\"), mdx(\"p\", null, \"Files can be accessed using Azure Portal or Azure Storage Explorer.\"), mdx(\"p\", null, \"Azure files support high availability.\"), mdx(\"p\", null, \"This service provides a list of endpoints available at  https://{storage-account-name}.file.core.windows.net\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"983689f8-8aa7-5d95-b748-0c31758b8177","fields":{"slug":"/azure/azure-files","title":"Azure Files"}}}},{"contextLine":"- Locally Redundant Storage (LRS) (see :[[azure-storage-redundancy-types#Locally Redundant Storage (LRS)]])","targetAnchor":"Locally Redundant Storage (LRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"- Zone-Redundant Storage (ZRS) (see: [[azure-storage-redundancy-types#Zone-Redundant Storage (ZRS)]])","targetAnchor":"Zone-Redundant Storage (ZRS)","refWord":"azure-storage-redundancy-types","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900, storage\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Azure Storage Redundancy Types\"), mdx(\"p\", null, \"Azure Storage always stores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"multiple copies of your data\"), \" to protect it from planned and unplanned events.\"), mdx(\"p\", null, \"When deciding the best redundancy option for a speciAfic scenario, you must consider costs and availability.\"), mdx(\"p\", null, \"Data in an Azure Storage account is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always replicated three times\"), \" in the primary region.\"), mdx(\"h2\", null, \"Primary zone redundancy\"), mdx(\"p\", null, \"The cheapest options allow you to make data redundant in the same region.\"), mdx(\"p\", null, \"You then have only the primary region.\"), mdx(\"h3\", null, \"Locally Redundant Storage (LRS)\"), mdx(\"p\", null, \"LRS replicates your data three times \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"within a single data center in the primary region\"), \".\"), mdx(\"p\", null, \"LRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"11 nines of durability\"), \" (99.999999999%) of objects over a given year.\"), mdx(\"p\", null, \"It's the cheapest option and also the one with the least durability.\"), mdx(\"p\", null, \"Suppose a disaster such as fire or flooding occurs within the data center. In that case, all replicas of a storage account using LRS may be lost or unrecoverable.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/bd0b1acb2175c12aa06498f5cd8e63d0/lrs.png\",\n    \"alt\": \"Locally Redundant Storage (LRS)\"\n  })), mdx(\"h3\", null, \"Zone-Redundant Storage (ZRS)\"), mdx(\"p\", null, \"ZRS replicates your Azure Storage data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" across \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"three \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/azure-availability-zones\",\n    \"title\": \"azure-availability-zones\"\n  }, \"[[azure-availability-zones]]\"), \" in the primary region\"), \".\"), mdx(\"p\", null, \"ZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"12 nines of durability\"), \" (99.9999999999%).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/0f171edb7886757d0c31314d3a2a84a3/zrs.png\",\n    \"alt\": \"Zone-Redundant Storage (ZRS)\"\n  })), mdx(\"p\", null, \"Data is still accessible for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"both read and write operations\"), \" even if a zone becomes unavailable.\"), mdx(\"p\", null, \"If a zone becomes unavailable, Azure undertakes networking updates, such as DNS repointing.\"), mdx(\"p\", null, \"Good usage of ZRS:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"high availability;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"meet governance requirements to have data replicated only within a region or country.\")), mdx(\"h2\", null, \"Redundancy in a secondary region\"), mdx(\"p\", null, \"If you need even more durability and data availability, you can replicate your data across a secondary region.\"), mdx(\"p\", null, \"When creating a storage account, you must select the primary region. The paired secondary region is assigned automatically, based on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-region-pairs\",\n    \"title\": \"azure-region-pairs\"\n  }, \"[[azure-region-pairs]]\"), \", and cannot be changed.\"), mdx(\"p\", null, \"By default, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"data in the secondary region is only available for read or write access if there's a failover to the secondary region\"), \". If the primary region becomes unavailable, you can choose to fail over to the secondary region. After the failover has been completed, the secondary region becomes the primary region, and you can again read and write data.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Data is replicated to the secondary region asynchronously\"), \". A failure that affects the primary region may result in data loss if the primary region can't be recovered. The interval between the last write to the primary region and the last write to the secondary region is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Recovery Point Objective (RPO)\"), \", and it's generally less than 15 minutes.\"), mdx(\"h3\", null, \"Geo-Redundant Storage (GRS)\"), mdx(\"p\", null, \"GRS copies data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"synchronously\"), \" three times using LRS (so, a single location within the primary region) and then replicates the data \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asynchronously\"), \" to a single location within the secondary region.\"), mdx(\"p\", null, \"GRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region unless a failover operation is performed.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/798e9532b055bd3960740bf529da4fc0/grs.png\",\n    \"alt\": \"Geo-Redundant Storage (GRS)\"\n  })), mdx(\"h3\", null, \"Geo-Zone-Redundant Storage (GZRS)\"), mdx(\"p\", null, \"GZRS copies data in 3 different availability zones and then replicates data to a secondary region using LRS.\"), mdx(\"p\", null, \"GZRS provides at least \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16 nines of durability\"), \" of objects over a given year.\"), mdx(\"p\", null, \"You cannot read data from the secondary region, unless a failover operation is performed.\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/personal-notes/d335716e9cae141080be0b2597acaaca/gzrs.png\",\n    \"alt\": \"Geo-Zone-Redundant Storage (GZRS)\"\n  })), mdx(\"h3\", null, \"Read-Access Geo-Redundant Storage (RA-GRS)\"), mdx(\"p\", null, \"Similar to GRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"), mdx(\"h3\", null, \"Read-Access Geo-Zone-Redundant Storage (RA-GZRS)\"), mdx(\"p\", null, \"Similar to GZRS, but you can also read data from the secondary region.\"), mdx(\"p\", null, \"Data might not be immediately updated due to RPO.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"fa3acc9f-470b-5c18-bc1e-1d2c3d18521f","fields":{"slug":"/azure/azure-storage-redundancy-types","title":"Azure Storage Redundancy Types"}}}},{"contextLine":"For [[page-blobs]] only.","targetAnchor":null,"refWord":"page-blobs","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"azure, cloud, azure-certifications/az900\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Page Blobs\"), mdx(\"p\", null, \"Page blobs are a collection of 512-byte pages \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"optimized for random read and write operations\"), \".\"), mdx(\"p\", null, \"Page blobs store random access files up to 8 TiB in size. Page blobs store virtual hard drive (VHD) files and serve as disks for Azure virtual machines.\"), mdx(\"p\", null, \"A write to a page blob can overwrite just one page, some pages, or up to 4 MiB of the page blob. Writes to page blobs happen in-place and are immediately committed to the blob.\"), mdx(\"p\", null, \"They are one of the possible ways to use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/azure-blob-storage\",\n    \"title\": \"azure-blob-storage\"\n  }, \"[[azure-blob-storage]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"9a481184-ae9b-5731-8c95-6bd6ddccb9c1","fields":{"slug":"/azure/page-blobs","title":"Page Blobs"}}}}],"inboundReferences":[{"contextLine":"    - [[azure-storage-account]]","referrer":{"parent":{"id":"c34fa374-8cf9-5420-b22a-1dcb7706b8ea","fields":{"slug":"/azure-certifications/az-900","title":"AZ-900"}}}},{"contextLine":"It works with several PaaS services, such as [[azure-app-service]], [[Azure SQL]], and [[azure-storage-account]]. It watches for anomalies in the activity logs.","referrer":{"parent":{"id":"5f5d0522-7c05-5971-9f9e-662fc92c5181","fields":{"slug":"/azure/microsoft-defender-for-cloud","title":"Microsoft Defender for Cloud"}}}}]},"fields":{"slug":"/azure/azure-storage-account","title":"Azure Storage Account"}}},"pageContext":{"id":"31f5abe3-20fc-5960-a562-559cd2f76c0e","refWordMdxSlugDict":{"block-blobs":"azure/block-blobs","azure-blob-storage":"azure/azure-blob-storage","append-blobs":"azure/append-blobs","page-blobs":"azure/page-blobs","azure-queue-storage":"azure/azure-queue-storage","azure-table-storage":"azure/azure-table-storage","azure-files":"azure/azure-files","azure-storage-redundancy-types":"azure/azure-storage-redundancy-types","azure-availability-zones":"azure/azure-availability-zones","azure-region":"azure/azure-region","azure-virtual-machines":"azure/azure-virtual-machines","iaas":"general/iaas","shared-responsibility-model":"general/shared-responsibility-model","saas":"general/saas","azure-arc":"azure/azure-arc","azure-resource-manager":"azure/azure-resource-manager","arm-templates":"azure/arm-templates","bicep":"azure/bicep","azure-advisor":"azure/azure-advisor","azure-cloud-shell":"azure/azure-cloud-shell","azure-powershell":"azure/azure-powershell","paas":"general/paas","microsoft-purview":"azure/microsoft-purview","azure-app-service":"azure/azure-app-service","azure-container-apps":"azure/azure-container-apps","azure-kubernetes-service":"azure/azure-kubernetes-service","azure-active-directory":"azure/azure-active-directory","conditional-access":"azure/conditional-access","azure-active-directory-domain-services":"azure/azure-active-directory-domain-services","fido2-authentication":"general/fido2-authentication","azure-ad-external-identities":"azure/azure-ad-external-identities","azure-virtual-desktop":"azure/azure-virtual-desktop","azure-expressroute":"azure/azure-expressroute","azure-virtual-network":"azure/azure-virtual-network","azure-network-scripts":"azure-cli/azure-network-scripts","virtual-machines-size":"azure/virtual-machines-size","optimize-virtual-machines":"azure/optimize-virtual-machines","azure-vm-scripts":"azure-cli/azure-vm-scripts","azure-region-pairs":"azure/azure-region-pairs"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}