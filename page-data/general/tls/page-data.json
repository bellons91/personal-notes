{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/general/tls",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"networking\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"TLS\"), mdx(\"p\", null, \"TLS stands for Transport Layer Security, a protocol that provides secure communication over the internet. TLS encrypts the data that is sent and received between a client and a server, preventing eavesdropping, tampering, and impersonation. TLS also ensures that the client and the server can verify each other's identity using digital certificates. TLS is widely used for web browsing, email, instant messaging, voice over IP, and other applications that require privacy and authentication.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#tls","title":"TLS"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"* **Incoming client certificates**: require client certificates in mutual authentication. [[tls]] mutual authentication is used to restrict access to your app by enabling different types of authentication for it.","referrer":{"parent":{"id":"deb4e0d7-ee35-5448-920e-7a8b2d1acdab","fields":{"slug":"/azure/azure-app-service/configuring-azure-app-services","title":"Configuring Azure App Services"}}}},{"contextLine":"Also known as a [[tls]] authentication record, it maps a domain name to the certificate or public key of a server. This record is used to authenticate the serverâ€™s identity and establish a secure connection. For example, a TLSA record for the domain name _443._tcp.example.com could be _443._tcp.example.com. IN TLSA 3 1 1 abcd....","referrer":{"parent":{"id":"4301458e-6192-556a-9e89-d5cbf984229e","fields":{"slug":"/general/dns-record-type","title":"DNS Record types"}}}}]},"fields":{"slug":"/general/tls","title":"TLS"}}},"pageContext":{"id":"53f0a31d-d426-5535-8357-3d6b48bd4fa2","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}